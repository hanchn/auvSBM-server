: "aggr_func",
  name: r ?
  `${r[0]}.${t}` : t,
  args: e, orderby: n}}(e, s, a, i), t = e): (fa = t, t = u)):
(fa = t, t = u); return t}()), e !== u && Lb() !== u ? ((n = function () {
  var t, e, n; return t = fa, "filter" === r.substr(fa, 6).toLowerCase() ? 
= r.substr(fa, 6), fa += 6) : (e = u, 0 === pa && ha(Ie)), e !== u && Lb() !== u && ub() !== u && Lb() !== u && (n = Oi()) !== u && Lb() !== u && ob() !== u ? (ba = t, t = e = { keyword: "filter", parentheses: !0, where: n }) : (fa = t, t = u), t
}()) === u && (n = null), n !== u ? (ba = t, s = e,
  (o = n) && (s.filter = o), t = e = s) : (fa = t, t = u)) : (fa = 
\t, t = u), t}function Yl() {
  var t; return (t = function () {
    var t, e, n; t = fa, (e = function () {
      var t; "row_number" === r.substr(fa, 10).toLowerCase() ? (t = r.substr(fa, 10), fa += 10) :
        (t = u, 0 === pa && ha(Se)); t === u && ("dense_rank" === r.substr(fa, 10).toLowerCase() ? (t = r.substr(fa, 10), fa += 10) : (t = u, 0 === pa && ha(ge)), t === u && ("rank" === r.substr(fa, 4).toLowerCase() ? (t = r.substr(fa, 4), fa += 4) : (t = u, 0 === pa && ha(Oe)))); return t
    }()) !== u && Lb() !== u && ub() !== u && Lb() !== u && ob() !== u && Lb() !== u && (n = jl()) !== u ? (ba = t, e = function (r, t) { return { type: "window_func", name: r, over: t } }(e, n), t = e) : (fa = t, t = u); return t
  }()) === u && (t = function () { var t, e, n, s, o; t = fa, (e = function () { var t; "lag" === r.substr(fa, 3).toLowerCase() ? (t = r.substr(fa, 3), fa += 3) : (t = u, 0 === pa && ha(xe)); t === u && ("lead" === r.substr(fa, 4).toLowerCase() ? (t = r.substr(fa, 4), fa += 4) : (t = u, 0 === pa && ha(Ue)), t === u && ("nth_value" === r.substr(fa, 9).toLowerCase() ? (t = r.substr(fa, 9), fa += 9) : (t = u, 0 === pa && ha(ke)))); return t }()) !== u && Lb() !== u && ub() !== u && Lb() !== u && (n = Qi()) !== u && Lb() !== u && ob() !== u && Lb() !== u ? ((s = Bl()) === u && (s = null), s !== u && Lb() !== u && (o = jl()) !== u ? (ba = t, e = function (r, t, e, n) { return { type: "window_func", name: r, args: t, over: n, consider_nulls: e } }(e, n, s, o), t = e) : (fa = t, t = u)) : (fa = t, t = u); return t }()) === u && (t = function () { var t, e, n, s, o; t = fa, (e = function () { var t; "first_value" === r.substr(fa, 11).toLowerCase() ? (t = r.substr(fa, 11), fa += 11) : (t = u, 0 === pa && ha(Ne)); t === u && ("last_value" === r.substr(fa, 10).toLowerCase() ? (t = r.substr(fa, 10), fa += 10) : (t = u, 0 === pa && ha(_e))); return t }()) !== u && Lb() !== u && ub() !== u && Lb() !== u && (n = ol()) !== u && Lb() !== u ? ((s = Bl()) === u && (s = null), s !== u && Lb() !== u && ob() !== u && Lb() !== u && (o = jl()) !== u ? (ba = t, e = function (r, t, e, n) { return { type: "window_func", name: r, args: { type: "expr_list", value: [t] }, over: n, consider_nulls: e } }(e, n, s, o), t = e) : (fa = t, t = u)) : (fa = t, t = u); return t }()), t
} function Bl() {
  var t, e, n; return t = fa, "ignore" === r.substr(fa, 6).toLowerCase() ?
    (e = r.substr(fa, 6), fa += 6) : (e = u, 0 === pa && ha(Me)), e === u && ("respect" === r.substr(fa, 7).toLowerCase() ? (e = r.substr(fa, 7), fa += 7) : (e = u, 0 === pa && ha(De))), e !== u && Lb() !== u ? ("nulls" === r.substr(fa, 5).toLowerCase() ? (n = r.substr(fa, 5), fa += 5) : (n = u, 0 === pa && ha(O)), n !== u ? (ba = t, t = e = e.toUpperCase() + " NULLS") : (fa = t, t = u)) : (fa = t, t = u), t
} function Wl() {
  var t, e, n; return t = fa, "separator" === r.substr(fa, 9).toLowerCase() ?
    (e = r.substr(fa, 9), fa += 9) : (e = u, 0 === pa && ha(je)), e === u && (e = null), e !== u && Lb() !== u && (n = uc()) !== u ? (ba = t, t = e = { keyword: e, value: n }) : (fa = t, t = u), t
} function Xl() {
  var r, t, e, n, s, o, a, i, l, c, f; if (r = fa, (t = zc()) === u && (t = null),
    t !== u) if (Lb() !== u) if ((e = ub()) !== u) if (Lb() !== u) if ((n = ol()) !== u) if (Lb() !== u) if ((s = ob()) !== u) if (Lb() !== u) { for (o = [], a = fa, (i = Lb()) !== u ? ((l = uf()) === u && (l = of()), l !== u && (c = Lb()) !== u && (f = ol()) !== u ? a = i = [i, l, c, f] : (fa = a, a = u)) : (fa = a, a = u); a !== u;)o.push(a), a = fa, (i = Lb()) !== u ? ((l = uf()) === u && (l = of()), l !== u && (c = Lb()) !== u && (f = ol()) !== u ? a = i = [i, l, c, f] : (fa = a, a = u)) : (fa = a, a = u); o !== u && (a = Lb()) !== u ? ((i = Fi()) === u && (i = null), i !== u && (l = Lb()) !== u ? ((c = Wl()) === u && (c = null), c !== u ? (ba = r, r = t = function (r, t, e, n, s) { const u = e.length; let o = t; o.parentheses = !0; for (let r = 0; r < u; ++r)o = jb(e[r][1], o, e[r][3]); return { distinct: r, expr: o, orderby: n, separator: s } }(t, n, o, i, c)) : (fa = r, r = u)) : (fa = r, r = u)) : (fa = r, r = u) } else fa = r, r = u; else fa = r, r = u; else fa = r, r = u; else fa = r, r = u; else fa = r, r = u; else fa = r, r = u; else fa = r, r = u; else fa = r, r = u; return r === u && (r = fa, (t = zc()) === u && (t = null), t !== u && Lb() !== u && (e = Si()) !== u && Lb() !== u ? ((n = Fi()) === u && (n = null), n !== u && Lb() !== u ? ((s = Wl()) === u && (s = null), s !== u ? (ba = r, r = t = function (r, t, e, n) { return { distinct: r, expr: t, orderby: e, separator: n } }(t, e, n, s)) : (fa = r, r = u)) : (fa = r, r = u)) : (fa = r, r = u)), r
} function Vl() {
  var t, e, n; return t = fa, (e = function () {
    var t; return "both" === r.substr(fa, 4).toLowerCase() ?
      (t = r.substr(fa, 4), fa += 4) : (t = u, 0 === pa && ha(He)), t === u && ("leading" === r.substr(fa, 7).toLowerCase() ? (t = r.substr(fa, 7), fa += 7) : (t = u, 0 === pa && ha(Ye)), t === u && ("trailing" === r.substr(fa, 8).toLowerCase() ? (t = r.substr(fa, 8), fa += 8) : (t = u, 0 === pa && ha(Be)))), t
  }()) === u && (e = null), e !== u && Lb() !== u ? ((n = uc()) === u && (n = null), n !== u && Lb() !== u && kc() !== u ? (ba = t, t = e = function (r, t, e) { let n = []; return r && n.push({ type: "origin", value: r }), t && n.push(t), n.push({ type: "origin", value: "from" }), { type: "expr_list", value: n } }(e, n)) : (fa = t, t = u)) : (fa = t, t = u), t
} function ql() {
  var t, e, n, s; return t = fa, "mode" === r.substr(fa, 4).toLowerCase()
    ? (e = r.substr(fa, 4), fa += 4) : (e = u, 0 === pa && ha(et)), e !== u && Lb() !== u ? ("=>" === r.substr(fa, 2) ? (n = "=>", fa += 2) : (n = u, 0 === pa && ha(Ve)), n !== u && Lb() !== u && (s = uc()) !== u ? (ba = t, t = e = function (r) { const t = new Set(["object", "array", "both"]); if (!r.value || !t.has(r.value.toLowerCase())) throw new Error((r && r.value) + " is not valid mode in object, array and both"); return r.value = r.value.toUpperCase(), { type: "mode", symbol: "=>", value: r } }(s)) : (fa = t, t = u)) : (fa = t, t = u), t
} function Kl() {
  var t, e, n, s, o, a, i, l, c, f; return t = fa, (e = function () {
    var t,
    e, n, s; return t = fa, "input" === r.substr(fa, 5).toLowerCase() ? (e = r.substr(fa, 5), fa += 5) : (e = u, 0 === pa && ha(Xe)), e !== u && Lb() !== u ? ("=>" === r.substr(fa, 2) ? (n = "=>", fa += 2) : (n = u, 0 === pa && ha(Ve)), n !== u && Lb() !== u && (s = ol()) !== u ? (ba = t, t = e = { type: "input", symbol: "=>", value: s }) : (fa = t, t = u)) : (fa = t, t = u), t
  }()) !== u ? (n = fa, (s = Lb()) !== u && (o = nb()) !== u && (a = Lb()) !== u && (i = function () { var t, e, n, s; return t = fa, "path" === r.substr(fa, 4).toLowerCase() ? (e = r.substr(fa, 4), fa += 4) : (e = u, 0 === pa && ha(qe)), e !== u && Lb() !== u ? ("=>" === r.substr(fa, 2) ? (n = "=>", fa += 2) : (n = u, 0 === pa && ha(Ve)), n !== u && Lb() !== u && (s = uc()) !== u ? (ba = t, t = e = { type: "path", symbol: "=>", value: s }) : (fa = t, t = u)) : (fa = t, t = u), t }()) !== u ? n = s = [s, o, a, i] : (fa = n, n = u), n === u && (n = null), n !== u ? (s = fa, (o = Lb()) !== u && (a = nb()) !== u && (i = Lb()) !== u && (l = function () { var t, e, n, s; return t = fa, "outer" === r.substr(fa, 5).toLowerCase() ? (e = r.substr(fa, 5), fa += 5) : (e = u, 0 === pa && ha(Ke)), e !== u && Lb() !== u ? ("=>" === r.substr(fa, 2) ? (n = "=>", fa += 2) : (n = u, 0 === pa && ha(Ve)), n !== u && Lb() !== u && (s = sc()) !== u ? (ba = t, t = e = { type: "outer", symbol: "=>", value: s }) : (fa = t, t = u)) : (fa = t, t = u), t }()) !== u ? s = o = [o, a, i, l] : (fa = s, s = u), s === u && (s = null), s !== u ? (o = fa, (a = Lb()) !== u && (i = nb()) !== u && (l = Lb()) !== u && (c = function () { var t, e, n, s; return t = fa, "recursive" === r.substr(fa, 9).toLowerCase() ? (e = r.substr(fa, 9), fa += 9) : (e = u, 0 === pa && ha(Ze)), e !== u && Lb() !== u ? ("=>" === r.substr(fa, 2) ? (n = "=>", fa += 2) : (n = u, 0 === pa && ha(Ve)), n !== u && Lb() !== u && (s = sc()) !== u ? (ba = t, t = e = { type: "recursive", symbol: "=>", value: s }) : (fa = t, t = u)) : (fa = t, t = u), t }()) !== u ? o = a = [a, i, l, c] : (fa = o, o = u), o === u && (o = null), o !== u ? (a = fa, (i = Lb()) !== u && (l = nb()) !== u && (c = Lb()) !== u && (f = ql()) !== u ? a = i = [i, l, c, f] : (fa = a, a = u), a === u && (a = null), a !== u ? (ba = t, t = e = function (r, t, e, n, s) { return { type: "flattern", input: r, path: t && t[3], outer: e && e[3], recursive: n && n[3], mode: s && s[3] } }(e, n, s, o, a)) : (fa = t, t = u)) : (fa = t, t = u)) : (fa = t, t = u)) : (fa = t, t = u)) : (fa = t, t = u), t
} function Zl() {
  var t, e, n, s, o, a, i, l, c; return (t = function () {
    var t, e, n, s;
    return t = fa, "trim" === r.substr(fa, 4).toLowerCase() ? (e = r.substr(fa, 4), fa += 4) : (e = u, 0 === pa && ha(We)), e !== u && Lb() !== u && ub() !== u && Lb() !== u ? ((n = Vl()) === u && (n = null), n !== u && Lb() !== u && (s = ol()) !== u && Lb() !== u && ob() !== u ? (ba = t, t = e = function (r, t) { let e = r || { type: "expr_list", value: [] }; return e.value.push(t), { type: "function", name: { name: [{ type: "origin", value: "trim" }] }, args: e } }(n, s)) : (fa = t, t = u)) : (fa = t, t = u), t
  }()) === u && (t = fa, "now" === r.substr(fa, 3).toLowerCase() ? (e = r.substr(fa, 3), fa += 3) : (e = u, 0 === pa && ha(ze)), e !== u && Lb() !== u && (n = ub()) !== u && Lb() !== u ? ((s = Qi()) === u && (s = null), s !== u && (o = Lb()) !== u && ob() !== u && Lb() !== u ? ("at" === r.substr(fa, 2).toLowerCase() ? (a = r.substr(fa, 2), fa += 2) : (a = u, 0 === pa && ha(Qe)), a !== u && (i = Lb()) !== u && Pf() !== u && Lb() !== u ? ("zone" === r.substr(fa, 4).toLowerCase() ? (l = r.substr(fa, 4), fa += 4) : (l = u, 0 === pa && ha(Je)), l !== u && Lb() !== u && (c = uc()) !== u ? (ba = t, t = e = function (r, t, e) { return e.prefix = "at time zone", { type: "function", name: { name: [{ type: "default", value: r }] }, args: t || { type: "expr_list", value: [] }, suffix: e } }(e, s, c)) : (fa = t, t = u)) : (fa = t, t = u)) : (fa = t, t = u)) : (fa = t, t = u), t === u && (t = fa, "flatten" === r.substr(fa, 7).toLowerCase() ? (e = r.substr(fa, 7), fa += 7) : (e = u, 0 === pa && ha(rn)), e !== u && Lb() !== u && (n = ub()) !== u && Lb() !== u && (s = Kl()) !== u && (o = Lb()) !== u && ob() !== u ? (ba = t, t = e = function (r, t) { return { type: "flatten", name: { name: [{ type: "default", value: r }] }, args: t } }(e, s)) : (fa = t, t = u), t === u && (t = fa, (e = function () { var t; (t = Ql()) === u && (t = function () { var t, e, n, s; t = fa, "current_user" === r.substr(fa, 12).toLowerCase() ? (e = r.substr(fa, 12), fa += 12) : (e = u, 0 === pa && ha(rr)); e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? (ba = t, t = e = "CURRENT_USER") : (fa = t, t = u)) : (fa = t, t = u); return t }()) === u && (t = function () { var t, e, n, s; t = fa, "user" === r.substr(fa, 4).toLowerCase() ? (e = r.substr(fa, 4), fa += 4) : (e = u, 0 === pa && ha(zu)); e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? (ba = t, t = e = "USER") : (fa = t, t = u)) : (fa = t, t = u); return t }()) === u && (t = function () { var t, e, n, s; t = fa, "session_user" === r.substr(fa, 12).toLowerCase() ? (e = r.substr(fa, 12), fa += 12) : (e = u, 0 === pa && ha(tr)); e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? (ba = t, t = e = "SESSION_USER") : (fa = t, t = u)) : (fa = t, t = u); return t }()) === u && (t = function () { var t, e, n, s; t = fa, "system_user" === r.substr(fa, 11).toLowerCase() ? (e = r.substr(fa, 11), fa += 11) : (e = u, 0 === pa && ha(Co)); e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? (ba = t, t = e = "SYSTEM_USER") : (fa = t, t = u)) : (fa = t, t = u); return t }()) === u && ("ntile" === r.substr(fa, 5).toLowerCase() ? (t = r.substr(fa, 5), fa += 5) : (t = u, 0 === pa && ha(Tn))); return t }()) !== u && Lb() !== u && (n = ub()) !== u && Lb() !== u ? ((s = Qi()) === u && (s = null), s !== u && (o = Lb()) !== u && ob() !== u && Lb() !== u ? ((a = jl()) === u && (a = null), a !== u ? (ba = t, t = e = function (r, t, e) { return { type: "function", name: { name: [{ type: "default", value: r }] }, args: t || { type: "expr_list", value: [] }, over: e } }(e, s, a)) : (fa = t, t = u)) : (fa = t, t = u)) : (fa = t, t = u), t === u && (t = function () { var r, t, e, n, s; r = fa, (t = lf()) !== u && Lb() !== u && ub() !== u && Lb() !== u && (e = zl()) !== u && Lb() !== u && kc() !== u && Lb() !== u ? ((n = Gf()) === u && (n = jf()) === u && (n = Pf()) === u && (n = Mf()), n === u && (n = null), n !== u && Lb() !== u && (s = ol()) !== u && Lb() !== u && ob() !== u ? (ba = r, o = e, a = n, i = s, t = { type: t.toLowerCase(), args: { field: o, cast_type: a, source: i } }, r = t) : (fa = r, r = u)) : (fa = r, r = u); var o, a, i; r === u && (r = fa, (t = lf()) !== u && Lb() !== u && ub() !== u && Lb() !== u && (e = zl()) !== u && Lb() !== u && kc() !== u && Lb() !== u && (n = ol()) !== u && Lb() !== u && (s = ob()) !== u ? (ba = r, t = function (r, t, e) { return { type: r.toLowerCase(), args: { field: t, source: e } } }(t, e, n), r = t) : (fa = r, r = u)); return r }()) === u && (t = fa, (e = Ql()) !== u && Lb() !== u ? ((n = Fl()) === u && (n = null), n !== u ? (ba = t, t = e = { type: "function", name: { name: [{ type: "origin", value: e }] }, over: n }) : (fa = t, t = u)) : (fa = t, t = u), t === u && (t = fa, (e = Nb()) !== u ? (ba = fa, (function (r) { return !Pb[r.name[0] && r.name[0].value.toLowerCase()] }(e) ? void 0 : u) !== u && (n = Lb()) !== u && ub() !== u && (s = Lb()) !== u ? ((o = al()) === u && (o = null), o !== u && Lb() !== u && ob() !== u && (a = Lb()) !== u ? ((i = jl()) === u && (i = null), i !== u ? (ba = t, t = e = function (r, t, e) { return t && "expr_list" !== t.type && (t = { type: "expr_list", value: [t] }), (r.name[0] && "TIMESTAMPDIFF" === r.name[0].value.toUpperCase() || r.name[0] && "TIMESTAMPADD" === r.name[0].value.toUpperCase()) && t.value && t.value[0] && (t.value[0] = { type: "origin", value: t.value[0].column }), { type: "function", name: r, args: t || { type: "expr_list", value: [] }, over: e } }(e, o, i)) : (fa = t, t = u)) : (fa = t, t = u)) : (fa = t, t = u)) : (fa = t, t = u)))))), t
} function zl() {
  var t, e; return t = fa, "century" === r.substr(fa, 7).toLowerCase() ? (e = r.substr(fa, 7), fa += 7) : (e = u, 0 === pa && ha(tn)), e === u && ("day" === r.substr(fa, 3).toLowerCase() ? (e = r.substr(fa, 3), fa += 3) : (e = u, 0 === pa && ha(en)), e === u && ("date" === r.substr(fa, 4).toLowerCase() ? (e = r.substr(fa, 4), fa += 4) : (e = u, 0 === pa && ha(nn)), e === u && ("decade" === r.substr(fa, 6).toLowerCase() ? (e = r.substr(fa, 6), fa += 6)
    : (e = u, 0 === pa && ha(sn)), e === u && ("dow" === r.substr(fa, 3).toLowerCase() ? (e = r.substr(fa, 3), fa += 3) : (e = u, 0 === pa && ha(un)), e === u && ("doy" === r.substr(fa, 3).toLowerCase() ? (e = r.substr(fa, 3), fa += 3) : (e = u, 0 === pa && ha(on)), e === u && ("epoch" === r.substr(fa, 5).toLowerCase() ? (e = r.substr(fa, 5), fa += 5) : (e = u, 0 === pa && ha(an)), e === u && ("hour" === r.substr(fa, 4).toLowerCase() ? (e = r.substr(fa, 4), fa += 4) : (e = u, 0 === pa && ha(ln)), e === u && ("isodow" === r.substr(fa, 6).toLowerCase() ? (e = r.substr(fa, 6), fa += 6) : (e = u, 0 === pa && ha(cn)), e === u && ("isoyear" === r.substr(fa, 7).toLowerCase() ? (e = r.substr(fa, 7), fa += 7) : (e = u, 0 === pa && ha(fn)), e === u && ("microseconds" === r.substr(fa, 12).toLowerCase() ? (e = r.substr(fa, 12), fa += 12) : (e = u, 0 === pa && ha(bn)), e === u && ("millennium" === r.substr(fa, 10).toLowerCase() ? (e = r.substr(fa, 10), fa += 10) : (e = u, 0 === pa && ha(vn)), e === u && ("milliseconds" === r.substr(fa, 12).toLowerCase() ? (e = r.substr(fa, 12), fa += 12) : (e = u, 0 === pa && ha(Ln)), e === u && ("minute" === r.substr(fa, 6).toLowerCase() ? (e = r.substr(fa, 6), fa += 6) : (e = u, 0 === pa && ha(Cn)), e === u && ("month" === r.substr(fa, 5).toLowerCase() ? (e = r.substr(fa, 5), fa += 5) : (e = u, 0 === pa && ha(pn)), e === u && ("quarter" === r.substr(fa, 7).toLowerCase() ? (e = r.substr(fa, 7), fa += 7) : (e = u, 0 === pa && ha(dn)), e === u && ("second" === r.substr(fa, 6).toLowerCase() ? (e = r.substr(fa, 6), fa += 6) : (e = u, 0 === pa && ha(wn)), e === u && ("timezone" === r.substr(fa, 8).toLowerCase() ? (e = r.substr(fa, 8), fa += 8) : (e = u, 0 === pa && ha(En)), e === u && ("timezone_hour" === r.substr(fa, 13).toLowerCase() ? (e = r.substr(fa, 13), fa += 13) : (e = u, 0 === pa && ha(yn)), e === u && ("timezone_minute" === r.substr(fa, 15).toLowerCase() ? (e = r.substr(fa, 15), fa += 15) : (e = u, 0 === pa && ha(hn)), e === u && ("week" === r.substr(fa, 4).toLowerCase() ? (e = r.substr(fa, 4), fa += 4) : (e = u, 0 === pa && ha(An)), e === u && ("year" === r.substr(fa, 4).toLowerCase() ? (e = r.substr(fa, 4), fa += 4) : (e = u, 0 === pa && ha(mn))))))))))))))))))))))), e !== u && (ba = t, e = e), t = e
} function Ql() {
  var t; return (t = function () {
    var t, e, n, s; t = fa,
      "current_date" === r.substr(fa, 12).toLowerCase() ? (e = r.substr(fa, 12), fa += 12) : (e = u, 0 === pa && ha(fo)); e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? (ba = t, t = e = "CURRENT_DATE") : (fa = t, t = u)) : (fa = t, t = u); return t
  }()) === u && (t = function () { var t, e, n, s; t = fa, "current_time" === r.substr(fa, 12).toLowerCase() ? (e = r.substr(fa, 12), fa += 12) : (e = u, 0 === pa && ha(vo)); e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? (ba = t, t = e = "CURRENT_TIME") : (fa = t, t = u)) : (fa = t, t = u); return t }()) === u && (t = Hf()), t
} function Jl() {
  var r, t, e, n, s, o, a, i; if (r = fa, Xf() !== u) if (Lb() !== u)
    if ((t = xb()) !== u) if (Lb() !== u) { for (e = [], n = fa, (s = fb()) === u && (s = cb()), s !== u && (o = Lb()) !== u ? ((a = uc()) === u && (a = lc()), a !== u ? n = s = [s, o, a] : (fa = n, n = u)) : (fa = n, n = u); n !== u;)e.push(n), n = fa, (s = fb()) === u && (s = cb()), s !== u && (o = Lb()) !== u ? ((a = uc()) === u && (a = lc()), a !== u ? n = s = [s, o, a] : (fa = n, n = u)) : (fa = n, n = u); e !== u && (n = Lb()) !== u ? ((s = di()) === u && (s = null), s !== u ? (ba = r, r = { as: s, symbol: "::", target: t, arrows: (i = e).map(r => r[0]), properties: i.map(r => r[2]), ...Gb() }) : (fa = r, r = u)) : (fa = r, r = u) } else fa = r, r = u; else fa = r, r = u; else fa = r, r = u; else fa = r, r = u; return r
} function rc() {
  var t; return (t = uc()) === u && (t = lc()) === u && (t = sc())
    === u && (t = ec()) === u && (t = function () { var t, e, n, s, o, a; t = fa, (e = Pf()) === u && (e = Mf()) === u && (e = Gf()) === u && (e = Df()); if (e !== u) if (Lb() !== u) { if (n = fa, 39 === r.charCodeAt(fa) ? (s = "'", fa++) : (s = u, 0 === pa && ha(Br)), s !== u) { for (o = [], a = ac(); a !== u;)o.push(a), a = ac(); o !== u ? (39 === r.charCodeAt(fa) ? (a = "'", fa++) : (a = u, 0 === pa && ha(Br)), a !== u ? n = s = [s, o, a] : (fa = n, n = u)) : (fa = n, n = u) } else fa = n, n = u; n !== u ? (ba = t, i = n, e = { type: e.toLowerCase(), value: i[1].join("") }, t = e) : (fa = t, t = u) } else fa = t, t = u; else fa = t, t = u; var i; if (t === u) if (t = fa, (e = Pf()) === u && (e = Mf()) === u && (e = Gf()) === u && (e = Df()), e !== u) if (Lb() !== u) { if (n = fa, 34 === r.charCodeAt(fa) ? (s = '"', fa++) : (s = u, 0 === pa && ha(ct)), s !== u) { for (o = [], a = oc(); a !== u;)o.push(a), a = oc(); o !== u ? (34 === r.charCodeAt(fa) ? (a = '"', fa++) : (a = u, 0 === pa && ha(ct)), a !== u ? n = s = [s, o, a] : (fa = n, n = u)) : (fa = n, n = u) } else fa = n, n = u; n !== u ? (ba = t, e = function (r, t) { return { type: r.toLowerCase(), value: t[1].join("") } }(e, n), t = e) : (fa = t, t = u) } else fa = t, t = u; else fa = t, t = u; return t }()) === u && (t = tc()), t
} function tc() {
  var t, e; return t = fa, function () {
    var t, e, n, s; t = fa, "array"
      === r.substr(fa, 5).toLowerCase() ? (e = r.substr(fa, 5), fa += 5) : (e = u, 0 === pa && ha(eu)); e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? (ba = t, t = e = "ARRAY") : (fa = t, t = u)) : (fa = t, t = u); return t
  }() !== u && Lb() !== u && ab() !== u && Lb() !== u ? ((e = Qi()) === u && (e = null), e !== u && Lb() !== u && ib() !== u ? (ba = t, t = function (r, t) { return { expr_list: t || { type: "origin", value: "" }, type: "array", keyword: "array", brackets: !0 } }(0, e)) : (fa = t, t = u)) : (fa = t, t = u), t
} function ec() {
  var t, e; return t = fa, (e = function () {
    var t, e, n, s; t = fa,
      "null" === r.substr(fa, 4).toLowerCase() ? (e = r.substr(fa, 4), fa += 4) : (e = u, 0 === pa && ha(rs)); e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? t = e = [e, n] : (fa = t, t = u)) : (fa = t, t = u); return t
  }()) !== u && (ba = t, e = { type: "null", value: null }), t = e
} function nc() {
  var t, e; return t = fa, (e = function () {
    var t, e, n,
    s; t = fa, "not null" === r.substr(fa, 8).toLowerCase() ? (e = r.substr(fa, 8), fa += 8) : (e = u, 0 === pa && ha(ts)); e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? t = e = [e, n] : (fa = t, t = u)) : (fa = t, t = u); return t
  }()) !== u && (ba = t, e = { type: "not null", value: "not null" }), t = e
} function sc() {
  var t, e; return t = fa, (e = function () {
    var t, e, n,
    s; t = fa, "true" === r.substr(fa, 4).toLowerCase() ? (e = r.substr(fa, 4), fa += 4) : (e = u, 0 === pa && ha(es)); e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? t = e = [e, n] : (fa = t, t = u)) : (fa = t, t = u); return t
  }()) !== u && (ba = t, e = { type: "bool", value: !0 }), (t = e) === u && (t = fa, (e = function () { var t, e, n, s; t = fa, "false" === r.substr(fa, 5).toLowerCase() ? (e = r.substr(fa, 5), fa += 5) : (e = u, 0 === pa && ha(ss)); e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? t = e = [e, n] : (fa = t, t = u)) : (fa = t, t = u); return t }()) !== u && (ba = t, e = { type: "bool", value: !1 }), t = e), t
} function uc() { var t, e, n, s, o, a, i, l, c; if (t = fa, e = fa, 39 === r.charCodeAt(fa) ? (n = "'", fa++) : (n = u, 0 === pa && ha(Br)), n !== u) { for (s = [], o = ac(); o !== u;)s.push(o), o = ac(); s !== u ? (39 === r.charCodeAt(fa) ? (o = "'", fa++) : (o = u, 0 === pa && ha(Br)), o !== u ? e = n = [n, s, o] : (fa = e, e = u)) : (fa = e, e = u) } else fa = e, e = u; if (e !== u) { if (n = [], Rn.test(r.charAt(fa)) ? (s = r.charAt(fa), fa++) : (s = u, 0 === pa && ha(In)), s !== u) for (; s !== u;)n.push(s), Rn.test(r.charAt(fa)) ? (s = r.charAt(fa), fa++) : (s = u, 0 === pa && ha(In)); else n = u; if (n !== u) if ((s = Lb()) !== u) { if (o = fa, 39 === r.charCodeAt(fa) ? (a = "'", fa++) : (a = u, 0 === pa && ha(Br)), a !== u) { for (i = [], l = ac(); l !== u;)i.push(l), l = ac(); i !== u ? (39 === r.charCodeAt(fa) ? (l = "'", fa++) : (l = u, 0 === pa && ha(Br)), l !== u ? o = a = [a, i, l] : (fa = o, o = u)) : (fa = o, o = u) } else fa = o, o = u; o !== u ? (ba = t, c = o, t = e = { type: "single_quote_string", value: `${e[1].join("")}${c[1].join("")}`, ...Gb() }) : (fa = t, t = u) } else fa = t, t = u; else fa = t, t = u } else fa = t, t = u; if (t === u) { if (t = fa, e = fa, 39 === r.charCodeAt(fa) ? (n = "'", fa++) : (n = u, 0 === pa && ha(Br)), n !== u) { for (s = [], o = ac(); o !== u;)s.push(o), o = ac(); s !== u ? (39 === r.charCodeAt(fa) ? (o = "'", fa++) : (o = u, 0 === pa && ha(Br)), o !== u ? e = n = [n, s, o] : (fa = e, e = u)) : (fa = e, e = u) } else fa = e, e = u; if (e !== u && (ba = t, e = function (r) { return { type: "single_quote_string", value: r[1].join(""), ...Gb() } }(e)), (t = e) === u) { if (t = fa, e = fa, 34 === r.charCodeAt(fa) ? (n = '"', fa++) : (n = u, 0 === pa && ha(ct)), n !== u) { for (s = [], o = oc(); o !== u;)s.push(o), o = oc(); s !== u ? (34 === r.charCodeAt(fa) ? (o = '"', fa++) : (o = u, 0 === pa && ha(ct)), o !== u ? e = n = [n, s, o] : (fa = e, e = u)) : (fa = e, e = u) } else fa = e, e = u; e !== u ? (n = fa, pa++, s = eb(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? (ba = t, t = e = function (r) { return { type: "double_quote_string", value: r[1].join("") } }(e)) : (fa = t, t = u)) : (fa = t, t = u) } } return t } function oc() { var t; return Nn.test(r.charAt(fa)) ? (t = r.charAt(fa), fa++) : (t = u, 0 === pa && ha(_n)), t === u && (t = ic()), t } function ac() { var t; return Sn.test(r.charAt(fa)) ? (t = r.charAt(fa), fa++) : (t = u, 0 === pa && ha(gn)), t === u && (t = ic()), t } function ic() { var t, e, n, s, o, a, i, l, c, f; return t = fa, "\\'" === r.substr(fa, 2) ? (e = "\\'", fa += 2) : (e = u, 0 === pa && ha(On)), e !== u && (ba = t, e = "\\'"), (t = e) === u && (t = fa, '\\"' === r.substr(fa, 2) ? (e = '\\"', fa += 2) : (e = u, 0 === pa && ha(xn)), e !== u && (ba = t, e = '\\"'), (t = e) === u && (t = fa, "\\\\" === r.substr(fa, 2) ? (e = "\\\\", fa += 2) : (e = u, 0 === pa && ha(Un)), e !== u && (ba = t, e = "\\\\"), (t = e) === u && (t = fa, "\\/" === r.substr(fa, 2) ? (e = "\\/", fa += 2) : (e = u, 0 === pa && ha(kn)), e !== u && (ba = t, e = "\\/"), (t = e) === u && (t = fa, "\\b" === r.substr(fa, 2) ? (e = "\\b", fa += 2) : (e = u, 0 === pa && ha(Mn)), e !== u && (ba = t, e = "\b"), (t = e) === u && (t = fa, "\\f" === r.substr(fa, 2) ? (e = "\\f", fa += 2) : (e = u, 0 === pa && ha(Dn)), e !== u && (ba = t, e = "\f"), (t = e) === u && (t = fa, "\\n" === r.substr(fa, 2) ? (e = "\\n", fa += 2) : (e = u, 0 === pa && ha($n)), e !== u && (ba = t, e = "\n"), (t = e) === u && (t = fa, "\\r" === r.substr(fa, 2) ? (e = "\\r", fa += 2) : (e = u, 0 === pa && ha(Pn)), e !== u && (ba = t, e = "\r"), (t = e) === u && (t = fa, "\\t" === r.substr(fa, 2) ? (e = "\\t", fa += 2) : (e = u, 0 === pa && ha(Gn)), e !== u && (ba = t, e = "\t"), (t = e) === u && (t = fa, "\\u" === r.substr(fa, 2) ? (e = "\\u", fa += 2) : (e = u, 0 === pa && ha(Fn)), e !== u && (n = Cc()) !== u && (s = Cc()) !== u && (o = Cc()) !== u && (a = Cc()) !== u ? (ba = t, i = n, l = s, c = o, f = a, t = e = String.fromCharCode(parseInt("0x" + i + l + c + f))) : (fa = t, t = u), t === u && (t = fa, 92 === r.charCodeAt(fa) ? (e = "\\", fa++) : (e = u, 0 === pa && ha(jn)), e !== u && (ba = t, e = "\\"), (t = e) === u && (t = fa, "''" === r.substr(fa, 2) ? (e = "''", fa += 2) : (e = u, 0 === pa && ha(Hn)), e !== u && (ba = t, e = "''"), t = e))))))))))), t } function lc() { var r, t, e; return r = fa, (t = function () { var r, t, e, n; r = fa, (t = cc()) === u && (t = null); t !== u && (e = fc()) !== u && (n = bc()) !== u ? (ba = r, r = t = { type: "bigint", value: (t || "") + e + n }) : (fa = r, r = u); r === u && (r = fa, (t = cc()) === u && (t = null), t !== u && (e = fc()) !== u ? (ba = r, t = function (r, t) { const e = (r || "") + t; return r && Hb(r) ? { type: "bigint", value: e } : parseFloat(e) }(t, e), r = t) : (fa = r, r = u), r === u && (r = fa, (t = cc()) !== u && (e = bc()) !== u ? (ba = r, t = function (r, t) { return { type: "bigint", value: r + t } }(t, e), r = t) : (fa = r, r = u), r === u && (r = fa, (t = cc()) !== u && (ba = r, t = function (r) { return Hb(r) ? { type: "bigint", value: r } : parseFloat(r) }(t)), r = t))); return r }()) !== u && (ba = r, t = (e = t) && "bigint" === e.type ? e : { type: "number", value: e }), r = t } function cc() { var t, e, n; return (t = vc()) === u && (t = Lc()) === u && (t = fa, 45 === r.charCodeAt(fa) ? (e = "-", fa++) : (e = u, 0 === pa && ha(ee)), e === u && (43 === r.charCodeAt(fa) ? (e = "+", fa++) : (e = u, 0 === pa && ha(te))), e !== u && (n = vc()) !== u ? (ba = t, t = e = e + n) : (fa = t, t = u), t === u && (t = fa, 45 === r.charCodeAt(fa) ? (e = "-", fa++) : (e = u, 0 === pa && ha(ee)), e === u && (43 === r.charCodeAt(fa) ? (e = "+", fa++) : (e = u, 0 === pa && ha(te))), e !== u && (n = Lc()) !== u ? (ba = t, t = e = function (r, t) { return r + t }(e, n)) : (fa = t, t = u))), t } function fc() { var t, e, n; return t = fa, 46 === r.charCodeAt(fa) ? (e = ".", fa++) : (e = u, 0 === pa && ha(Wn)), e !== u && (n = vc()) !== u ? (ba = t, t = e = "." + n) : (fa = t, t = u), t } function bc() { var t, e, n; return t = fa, (e = function () { var t, e, n; t = fa, Zn.test(r.charAt(fa)) ? (e = r.charAt(fa), fa++) : (e = u, 0 === pa && ha(zn)); e !== u ? (Qn.test(r.charAt(fa)) ? (n = r.charAt(fa), fa++) : (n = u, 0 === pa && ha(Jn)), n === u && (n = null), n !== u ? (ba = t, t = e = e + (null !== (s = n) ? s : "")) : (fa = t, t = u)) : (fa = t, t = u); var s; return t }()) !== u && (n = vc()) !== u ? (ba = t, t = e = e + n) : (fa = t, t = u), t } function vc() { var r, t, e; if (r = fa, t = [], (e = Lc()) !== u) for (; e !== u;)t.push(e), e = Lc(); else t = u; return t !== u && (ba = r, t = t.join("")), r = t } function Lc() { var t; return Xn.test(r.charAt(fa)) ? (t = r.charAt(fa), fa++) : (t = u, 0 === pa && ha(Vn)), t } function Cc() { var t; return qn.test(r.charAt(fa)) ? (t = r.charAt(fa), fa++) : (t = u, 0 === pa && ha(Kn)), t } function pc() { var t, e, n, s; return t = fa, "default" === r.substr(fa, 7).toLowerCase() ? (e = r.substr(fa, 7), fa += 7) : (e = u, 0 === pa && ha(j)), e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? t = e = [e, n] : (fa = t, t = u)) : (fa = t, t = u), t } function dc() { var t, e, n, s; return t = fa, "to" === r.substr(fa, 2).toLowerCase() ? (e = r.substr(fa, 2), fa += 2) : (e = u, 0 === pa && ha(ns)), e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? t = e = [e, n] : (fa = t, t = u)) : (fa = t, t = u), t } function wc() { var t, e, n, s; return t = fa, "show" === r.substr(fa, 4).toLowerCase() ? (e = r.substr(fa, 4), fa += 4) : (e = u, 0 === pa && ha(us)), e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? t = e = [e, n] : (fa = t, t = u)) : (fa = t, t = u), t } function Ec() { var t, e, n, s; return t = fa, "drop" === r.substr(fa, 4).toLowerCase() ? (e = r.substr(fa, 4), fa += 4) : (e = u, 0 === pa && ha(os)), e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? (ba = t, t = e = "DROP") : (fa = t, t = u)) : (fa = t, t = u), t } function yc() { var t, e, n, s; return t = fa, "alter" === r.substr(fa, 5).toLowerCase() ? (e = r.substr(fa, 5), fa += 5) : (e = u, 0 === pa && ha(is)), e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? t = e = [e, n] : (fa = t, t = u)) : (fa = t, t = u), t } function hc() { var t, e, n, s; return t = fa, "select" === r.substr(fa, 6).toLowerCase() ? (e = r.substr(fa, 6), fa += 6) : (e = u, 0 === pa && ha(ls)), e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? t = e = [e, n] : (fa = t, t = u)) : (fa = t, t = u), t } function Ac() { var t, e, n, s; return t = fa, "update" === r.substr(fa, 6).toLowerCase() ? (e = r.substr(fa, 6), fa += 6) : (e = u, 0 === pa && ha(cs)), e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? t = e = [e, n] : (fa = t, t = u)) : (fa = t, t = u), t } function mc() { var t, e, n, s; return t = fa, "create" === r.substr(fa, 6).toLowerCase() ? (e = r.substr(fa, 6), fa += 6) : (e = u, 0 === pa && ha(fs)), e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? t = e = [e, n] : (fa = t, t = u)) : (fa = t, t = u), t } function Tc() { var t, e, n, s; return t = fa, "temporary" === r.substr(fa, 9).toLowerCase() ? (e = r.substr(fa, 9), fa += 9) : (e = u, 0 === pa && ha(bs)), e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? t = e = [e, n] : (fa = t, t = u)) : (fa = t, t = u), t } function Rc() { var t, e, n, s; return t = fa, "temp" === r.substr(fa, 4).toLowerCase() ? (e = r.substr(fa, 4), fa += 4) : (e = u, 0 === pa && ha(vs)), e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? t = e = [e, n] : (fa = t, t = u)) : (fa = t, t = u), t } function Ic() { var t, e, n, s; return t = fa, "delete" === r.substr(fa, 6).toLowerCase() ? (e = r.substr(fa, 6), fa += 6) : (e = u, 0 === pa && ha(Ls)), e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? t = e = [e, n] : (fa = t, t = u)) : (fa = t, t = u), t } function Nc() { var t, e, n, s; return t = fa, "insert" === r.substr(fa, 6).toLowerCase() ? (e = r.substr(fa, 6), fa += 6) : (e = u, 0 === pa && ha(Cs)), e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? t = e = [e, n] : (fa = t, t = u)) : (fa = t, t = u), t } function _c() { var t, e, n, s; return t = fa, "RECURSIVE" === r.substr(fa, 9) ? (e = "RECURSIVE", fa += 9) : (e = u, 0 === pa && ha(ps)), e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? (ba = t, t = e = "RECURSIVE") : (fa = t, t = u)) : (fa = t, t = u), t } function Sc() { var t, e, n, s; return t = fa, "replace" === r.substr(fa, 7).toLowerCase() ? (e = r.substr(fa, 7), fa += 7) : (e = u, 0 === pa && ha(ds)), e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? t = e = [e, n] : (fa = t, t = u)) : (fa = t, t = u), t } function gc() { var t, e, n, s; return t = fa, "rename" === r.substr(fa, 6).toLowerCase() ? (e = r.substr(fa, 6), fa += 6) : (e = u, 0 === pa && ha(Es)), e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? t = e = [e, n] : (fa = t, t = u)) : (fa = t, t = u), t } function Oc() { var t, e, n, s; return t = fa, "ignore" === r.substr(fa, 6).toLowerCase() ? (e = r.substr(fa, 6), fa += 6) : (e = u, 0 === pa && ha(Me)), e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? t = e = [e, n] : (fa = t, t = u)) : (fa = t, t = u), t } function xc() { var t, e, n, s; return t = fa, "partition" === r.substr(fa, 9).toLowerCase() ? (e = r.substr(fa, 9), fa += 9) : (e = u, 0 === pa && ha(ys)), e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? (ba = t, t = e = "PARTITION") : (fa = t, t = u)) : (fa = t, t = u), t } function Uc() { var t, e, n, s; return t = fa, "into" === r.substr(fa, 4).toLowerCase() ? (e = r.substr(fa, 4), fa += 4) : (e = u, 0 === pa && ha(hs)), e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? t = e = [e, n] : (fa = t, t = u)) : (fa = t, t = u), t } function kc() { var t, e, n, s; return t = fa, "from" === r.substr(fa, 4).toLowerCase() ? (e = r.substr(fa, 4), fa += 4) : (e = u, 0 === pa && ha(As)), e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? t = e = [e, n] : (fa = t, t = u)) : (fa = t, t = u), t } function Mc() { var t, e, n, s; return t = fa, "set" === r.substr(fa, 3).toLowerCase() ? (e = r.substr(fa, 3), fa += 3) : (e = u, 0 === pa && ha(kr)), e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? (ba = t, t = e = "SET") : (fa = t, t = u)) : (fa = t, t = u), t } function Dc() { var t, e, n, s; return t = fa, "as" === r.substr(fa, 2).toLowerCase() ? (e = r.substr(fa, 2), fa += 2) : (e = u, 0 === pa && ha(ms)), e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? t = e = [e, n] : (fa = t, t = u)) : (fa = t, t = u), t } function $c() { var t, e, n, s; return t = fa, "table" === r.substr(fa, 5).toLowerCase() ? (e = r.substr(fa, 5), fa += 5) : (e = u, 0 === pa && ha(Ts)), e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? (ba = t, t = e = "TABLE") : (fa = t, t = u)) : (fa = t, t = u), t } function Pc() { var t, e, n, s; return t = fa, "schema" === r.substr(fa, 6).toLowerCase() ? (e = r.substr(fa, 6), fa += 6) : (e = u, 0 === pa && ha(c)), e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? (ba = t, t = e = "SCHEMA") : (fa = t, t = u)) : (fa = t, t = u), t } function Gc() { var t, e, n, s; return t = fa, "on" === r.substr(fa, 2).toLowerCase() ? (e = r.substr(fa, 2), fa += 2) : (e = u, 0 === pa && ha(hr)), e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? t = e = [e, n] : (fa = t, t = u)) : (fa = t, t = u), t } function Fc() { var t, e, n, s; return t = fa, "join" === r.substr(fa, 4).toLowerCase() ? (e = r.substr(fa, 4), fa += 4) : (e = u, 0 === pa && ha(Us)), e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? t = e = [e, n] : (fa = t, t = u)) : (fa = t, t = u), t } function jc() { var t, e, n, s; return t = fa, "outer" === r.substr(fa, 5).toLowerCase() ? (e = r.substr(fa, 5), fa += 5) : (e = u, 0 === pa && ha(Ke)), e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? t = e = [e, n] : (fa = t, t = u)) : (fa = t, t = u), t } function Hc() { var t, e, n, s; return t = fa, "values" === r.substr(fa, 6).toLowerCase() ? (e = r.substr(fa, 6), fa += 6) : (e = u, 0 === pa && ha(Ms)), e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? t = e = [e, n] : (fa = t, t = u)) : (fa = t, t = u), t } function Yc() { var t, e, n, s; return t = fa, "using" === r.substr(fa, 5).toLowerCase() ? (e = r.substr(fa, 5), fa += 5) : (e = u, 0 === pa && ha(Ds)), e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? t = e = [e, n] : (fa = t, t = u)) : (fa = t, t = u), t } function Bc() { var t, e, n, s; return t = fa, "with" === r.substr(fa, 4).toLowerCase() ? (e = r.substr(fa, 4), fa += 4) : (e = u, 0 === pa && ha(dt)), e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? t = e = [e, n] : (fa = t, t = u)) : (fa = t, t = u), t } function Wc() { var t, e, n, s; return t = fa, "group" === r.substr(fa, 5).toLowerCase() ? (e = r.substr(fa, 5), fa += 5) : (e = u, 0 === pa && ha(Ps)), e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? t = e = [e, n] : (fa = t, t = u)) : (fa = t, t = u), t } function Xc() { var t, e, n, s; return t = fa, "by" === r.substr(fa, 2).toLowerCase() ? (e = r.substr(fa, 2), fa += 2) : (e = u, 0 === pa && ha(Gs)), e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? t = e = [e, n] : (fa = t, t = u)) : (fa = t, t = u), t } function Vc() { var t, e, n, s; return t = fa, "order" === r.substr(fa, 5).toLowerCase() ? (e = r.substr(fa, 5), fa += 5) : (e = u, 0 === pa && ha(Fs)), e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? t = e = [e, n] : (fa = t, t = u)) : (fa = t, t = u), t } function qc() { var t, e, n, s; return t = fa, "asc" === r.substr(fa, 3).toLowerCase() ? (e = r.substr(fa, 3), fa += 3) : (e = u, 0 === pa && ha(Ws)), e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? (ba = t, t = e = "ASC") : (fa = t, t = u)) : (fa = t, t = u), t } function Kc() { var t, e, n, s; return t = fa, "desc" === r.substr(fa, 4).toLowerCase() ? (e = r.substr(fa, 4), fa += 4) : (e = u, 0 === pa && ha(Xs)), e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? (ba = t, t = e = "DESC") : (fa = t, t = u)) : (fa = t, t = u), t } function Zc() { var t, e, n, s; return t = fa, "all" === r.substr(fa, 3).toLowerCase() ? (e = r.substr(fa, 3), fa += 3) : (e = u, 0 === pa && ha(Vs)), e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? (ba = t, t = e = "ALL") : (fa = t, t = u)) : (fa = t, t = u), t } function zc() { var t, e, n, s; return t = fa, "distinct" === r.substr(fa, 8).toLowerCase() ? (e = r.substr(fa, 8), fa += 8) : (e = u, 0 === pa && ha(qs)), e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? (ba = t, t = e = "DISTINCT") : (fa = t, t = u)) : (fa = t, t = u), t } function Qc() { var t, e, n, s; return t = fa, "between" === r.substr(fa, 7).toLowerCase() ? (e = r.substr(fa, 7), fa += 7) : (e = u, 0 === pa && ha(Ks)), e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? (ba = t, t = e = "BETWEEN") : (fa = t, t = u)) : (fa = t, t = u), t } function Jc() { var t, e, n, s; return t = fa, "in" === r.substr(fa, 2).toLowerCase() ? (e = r.substr(fa, 2), fa += 2) : (e = u, 0 === pa && ha(qr)), e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? (ba = t, t = e = "IN") : (fa = t, t = u)) : (fa = t, t = u), t } function rf() { var t, e, n, s; return t = fa, "is" === r.substr(fa, 2).toLowerCase() ? (e = r.substr(fa, 2), fa += 2) : (e = u, 0 === pa && ha(Zs)), e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? (ba = t, t = e = "IS") : (fa = t, t = u)) : (fa = t, t = u), t } function tf() { var t, e, n, s; return t = fa, "like" === r.substr(fa, 4).toLowerCase() ? (e = r.substr(fa, 4), fa += 4) : (e = u, 0 === pa && ha(zs)), e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? (ba = t, t = e = "LIKE") : (fa = t, t = u)) : (fa = t, t = u), t } function ef() { var t, e, n, s; return t = fa, "ilike" === r.substr(fa, 5).toLowerCase() ? (e = r.substr(fa, 5), fa += 5) : (e = u, 0 === pa && ha(Qs)), e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? (ba = t, t = e = "ILIKE") : (fa = t, t = u)) : (fa = t, t = u), t } function nf() { var t, e, n, s; return t = fa, "exists" === r.substr(fa, 6).toLowerCase() ? (e = r.substr(fa, 6), fa += 6) : (e = u, 0 === pa && ha(Js)), e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? (ba = t, t = e = "EXISTS") : (fa = t, t = u)) : (fa = t, t = u), t } function sf() { var t, e, n, s; return t = fa, "not" === r.substr(fa, 3).toLowerCase() ? (e = r.substr(fa, 3), fa += 3) : (e = u, 0 === pa && ha(Rr)), e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? (ba = t, t = e = "NOT") : (fa = t, t = u)) : (fa = t, t = u), t } function uf() { var t, e, n, s; return t = fa, "and" === r.substr(fa, 3).toLowerCase() ? (e = r.substr(fa, 3), fa += 3) : (e = u, 0 === pa && ha(ru)), e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? (ba = t, t = e = "AND") : (fa = t, t = u)) : (fa = t, t = u), t } function of() { var t, e, n, s; return t = fa, "or" === r.substr(fa, 2).toLowerCase() ? (e = r.substr(fa, 2), fa += 2) : (e = u, 0 === pa && ha(tu)), e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? (ba = t, t = e = "OR") : (fa = t, t = u)) : (fa = t, t = u), t } function af() { var t, e, n, s; return t = fa, "count" === r.substr(fa, 5).toLowerCase() ? (e = r.substr(fa, 5), fa += 5) : (e = u, 0 === pa && ha(su)), e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? (ba = t, t = e = "COUNT") : (fa = t, t = u)) : (fa = t, t = u), t } function lf() { var t, e, n, s; return t = fa, "extract" === r.substr(fa, 7).toLowerCase() ? (e = r.substr(fa, 7), fa += 7) : (e = u, 0 === pa && ha(cu)), e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? (ba = t, t = e = "EXTRACT") : (fa = t, t = u)) : (fa = t, t = u), t } function cf() { var t, e, n, s; return t = fa, "case" === r.substr(fa, 4).toLowerCase() ? (e = r.substr(fa, 4), fa += 4) : (e = u, 0 === pa && ha(bu)), e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? t = e = [e, n] : (fa = t, t = u)) : (fa = t, t = u), t } function ff() { var t, e, n, s; return t = fa, "when" === r.substr(fa, 4).toLowerCase() ? (e = r.substr(fa, 4), fa += 4) : (e = u, 0 === pa && ha(vu)), e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? t = e = [e, n] : (fa = t, t = u)) : (fa = t, t = u), t } function bf() { var t, e, n, s; return t = fa, "end" === r.substr(fa, 3).toLowerCase() ? (e = r.substr(fa, 3), fa += 3) : (e = u, 0 === pa && ha(pu)), e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? t = e = [e, n] : (fa = t, t = u)) : (fa = t, t = u), t } function vf() { var t, e, n, s; return t = fa, "cast" === r.substr(fa, 4).toLowerCase() ? (e = r.substr(fa, 4), fa += 4) : (e = u, 0 === pa && ha(du)), e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? (ba = t, t = e = "CAST") : (fa = t, t = u)) : (fa = t, t = u), t } function Lf() { var t, e, n, s; return t = fa, "try_cast" === r.substr(fa, 8).toLowerCase() ? (e = r.substr(fa, 8), fa += 8) : (e = u, 0 === pa && ha(wu)), e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? (ba = t, t = e = "TRY_CAST") : (fa = t, t = u)) : (fa = t, t = u), t } function Cf() { var t, e, n, s; return t = fa, "char" === r.substr(fa, 4).toLowerCase() ? (e = r.substr(fa, 4), fa += 4) : (e = u, 0 === pa && ha(hu)), e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? (ba = t, t = e = "CHAR") : (fa = t, t = u)) : (fa = t, t = u), t } function pf() { var t, e, n, s; return t = fa, "varchar" === r.substr(fa, 7).toLowerCase() ? (e = r.substr(fa, 7), fa += 7) : (e = u, 0 === pa && ha(Au)), e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? (ba = t, t = e = "VARCHAR") : (fa = t, t = u)) : (fa = t, t = u), t } function df() { var t, e, n, s; return t = fa, "number" === r.substr(fa, 6).toLowerCase() ? (e = r.substr(fa, 6), fa += 6) : (e = u, 0 === pa && ha(mu)), e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? (ba = t, t = e = "NUMBER") : (fa = t, t = u)) : (fa = t, t = u), t } function wf() { var t, e, n, s; return t = fa, "decimal" === r.substr(fa, 7).toLowerCase() ? (e = r.substr(fa, 7), fa += 7) : (e = u, 0 === pa && ha(Tu)), e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? (ba = t, t = e = "DECIMAL") : (fa = t, t = u)) : (fa = t, t = u), t } function Ef() { var t, e, n, s; return t = fa, "unsigned" === r.substr(fa, 8).toLowerCase() ? (e = r.substr(fa, 8), fa += 8) : (e = u, 0 === pa && ha(Iu)), e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? (ba = t, t = e = "UNSIGNED") : (fa = t, t = u)) : (fa = t, t = u), t } function yf() { var t, e, n, s; return t = fa, "int" === r.substr(fa, 3).toLowerCase() ? (e = r.substr(fa, 3), fa += 3) : (e = u, 0 === pa && ha(Nu)), e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? (ba = t, t = e = "INT") : (fa = t, t = u)) : (fa = t, t = u), t } function hf() { var t, e, n, s; return t = fa, "integer" === r.substr(fa, 7).toLowerCase() ? (e = r.substr(fa, 7), fa += 7) : (e = u, 0 === pa && ha(Su)), e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? (ba = t, t = e = "INTEGER") : (fa = t, t = u)) : (fa = t, t = u), t } function Af() { var t, e, n, s; return t = fa, "smallint" === r.substr(fa, 8).toLowerCase() ? (e = r.substr(fa, 8), fa += 8) : (e = u, 0 === pa && ha(Uu)), e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? (ba = t, t = e = "SMALLINT") : (fa = t, t = u)) : (fa = t, t = u), t } function mf() { var t, e, n, s; return t = fa, "serial" === r.substr(fa, 6).toLowerCase() ? (e = r.substr(fa, 6), fa += 6) : (e = u, 0 === pa && ha(ku)), e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? (ba = t, t = e = "SERIAL") : (fa = t, t = u)) : (fa = t, t = u), t } function Tf() { var t, e, n, s; return t = fa, "tinyint" === r.substr(fa, 7).toLowerCase() ? (e = r.substr(fa, 7), fa += 7) : (e = u, 0 === pa && ha(Mu)), e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? (ba = t, t = e = "TINYINT") : (fa = t, t = u)) : (fa = t, t = u), t } function Rf() { var t, e, n, s; return t = fa, "tinytext" === r.substr(fa, 8).toLowerCase() ? (e = r.substr(fa, 8), fa += 8) : (e = u, 0 === pa && ha(Du)), e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? (ba = t, t = e = "TINYTEXT") : (fa = t, t = u)) : (fa = t, t = u), t } function If() { var t, e, n, s; return t = fa, "text" === r.substr(fa, 4).toLowerCase() ? (e = r.substr(fa, 4), fa += 4) : (e = u, 0 === pa && ha($u)), e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? (ba = t, t = e = "TEXT") : (fa = t, t = u)) : (fa = t, t = u), t } function Nf() { var t, e, n, s; return t = fa, "mediumtext" === r.substr(fa, 10).toLowerCase() ? (e = r.substr(fa, 10), fa += 10) : (e = u, 0 === pa && ha(Pu)), e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? (ba = t, t = e = "MEDIUMTEXT") : (fa = t, t = u)) : (fa = t, t = u), t } function _f() { var t, e, n, s; return t = fa, "longtext" === r.substr(fa, 8).toLowerCase() ? (e = r.substr(fa, 8), fa += 8) : (e = u, 0 === pa && ha(Gu)), e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? (ba = t, t = e = "LONGTEXT") : (fa = t, t = u)) : (fa = t, t = u), t } function Sf() { var t, e, n, s; return t = fa, "bigint" === r.substr(fa, 6).toLowerCase() ? (e = r.substr(fa, 6), fa += 6) : (e = u, 0 === pa && ha(Fu)), e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? (ba = t, t = e = "BIGINT") : (fa = t, t = u)) : (fa = t, t = u), t } function gf() { var t, e, n, s; return t = fa, "enum" === r.substr(fa, 4).toLowerCase() ? (e = r.substr(fa, 4), fa += 4) : (e = u, 0 === pa && ha(ju)), e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? (ba = t, t = e = "ENUM") : (fa = t, t = u)) : (fa = t, t = u), t } function Of() { var t, e, n, s; return t = fa, "float" === r.substr(fa, 5).toLowerCase() ? (e = r.substr(fa, 5), fa += 5) : (e = u, 0 === pa && ha(Hu)), e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? (ba = t, t = e = "FLOAT") : (fa = t, t = u)) : (fa = t, t = u), t } function xf() { var t, e, n, s; return t = fa, "double" === r.substr(fa, 6).toLowerCase() ? (e = r.substr(fa, 6), fa += 6) : (e = u, 0 === pa && ha(Yu)), e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? (ba = t, t = e = "DOUBLE") : (fa = t, t = u)) : (fa = t, t = u), t } function Uf() { var t, e, n, s; return t = fa, "bigserial" === r.substr(fa, 9).toLowerCase() ? (e = r.substr(fa, 9), fa += 9) : (e = u, 0 === pa && ha(Bu)), e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? (ba = t, t = e = "BIGSERIAL") : (fa = t, t = u)) : (fa = t, t = u), t } function kf() { var t, e, n, s; return t = fa, "real" === r.substr(fa, 4).toLowerCase() ? (e = r.substr(fa, 4), fa += 4) : (e = u, 0 === pa && ha(Wu)), e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? (ba = t, t = e = "REAL") : (fa = t, t = u)) : (fa = t, t = u), t } function Mf() { var t, e, n, s; return t = fa, "date" === r.substr(fa, 4).toLowerCase() ? (e = r.substr(fa, 4), fa += 4) : (e = u, 0 === pa && ha(nn)), e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? (ba = t, t = e = "DATE") : (fa = t, t = u)) : (fa = t, t = u), t } function Df() { var t, e, n, s; return t = fa, "datetime" === r.substr(fa, 8).toLowerCase() ? (e = r.substr(fa, 8), fa += 8) : (e = u, 0 === pa && ha(Xu)), e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? (ba = t, t = e = "DATETIME") : (fa = t, t = u)) : (fa = t, t = u), t } function $f() { var t, e, n, s; return t = fa, "rows" === r.substr(fa, 4).toLowerCase() ? (e = r.substr(fa, 4), fa += 4) : (e = u, 0 === pa && ha(Vu)), e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? (ba = t, t = e = "ROWS") : (fa = t, t = u)) : (fa = t, t = u), t } function Pf() { var t, e, n, s; return t = fa, "time" === r.substr(fa, 4).toLowerCase() ? (e = r.substr(fa, 4), fa += 4) : (e = u, 0 === pa && ha(qu)), e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? (ba = t, t = e = "TIME") : (fa = t, t = u)) : (fa = t, t = u), t } function Gf() { var t, e, n, s; return t = fa, "timestamp" === r.substr(fa, 9).toLowerCase() ? (e = r.substr(fa, 9), fa += 9) : (e = u, 0 === pa && ha(Ku)), e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? (ba = t, t = e = "TIMESTAMP") : (fa = t, t = u)) : (fa = t, t = u), t } function Ff() { var t, e, n, s; return t = fa, "truncate" === r.substr(fa, 8).toLowerCase() ? (e = r.substr(fa, 8), fa += 8) : (e = u, 0 === pa && ha(Zu)), e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? (ba = t, t = e = "TRUNCATE") : (fa = t, t = u)) : (fa = t, t = u), t } function jf() { var t, e, n, s; return t = fa, "interval" === r.substr(fa, 8).toLowerCase() ? (e = r.substr(fa, 8), fa += 8) : (e = u, 0 === pa && ha(bo)), e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? (ba = t, t = e = "INTERVAL") : (fa = t, t = u)) : (fa = t, t = u), t } function Hf() { var t, e, n, s; return t = fa, "current_timestamp" === r.substr(fa, 17).toLowerCase() ? (e = r.substr(fa, 17), fa += 17) : (e = u, 0 === pa && ha(Lo)), e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? (ba = t, t = e = "CURRENT_TIMESTAMP") : (fa = t, t = u)) : (fa = t, t = u), t } function Yf() { var t; return 36 === r.charCodeAt(fa) ? (t = "$", fa++) : (t = u, 0 === pa && ha(ae)), t } function Bf() { var t; return "$$" === r.substr(fa, 2) ? (t = "$$", fa += 2) : (t = u, 0 === pa && ha(To)), t } function Wf() { var t; return (t = function () { var t; return "@@" === r.substr(fa, 2) ? (t = "@@", fa += 2) : (t = u, 0 === pa && ha(mo)), t }()) === u && (t = function () { var t; return 64 === r.charCodeAt(fa) ? (t = "@", fa++) : (t = u, 0 === pa && ha(Ao)), t }()) === u && (t = Yf()) === u && (t = Yf()), t } function Xf() { var t; return "::" === r.substr(fa, 2) ? (t = "::", fa += 2) : (t = u, 0 === pa && ha(No)), t } function Vf() { var t; return 61 === r.charCodeAt(fa) ? (t = "=", fa++) : (t = u, 0 === pa && ha(gt)), t } function qf() { var t, e, n, s; return t = fa, "add" === r.substr(fa, 3).toLowerCase() ? (e = r.substr(fa, 3), fa += 3) : (e = u, 0 === pa && ha(So)), e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? (ba = t, t = e = "ADD") : (fa = t, t = u)) : (fa = t, t = u), t } function Kf() { var t, e, n, s; return t = fa, "column" === r.substr(fa, 6).toLowerCase() ? (e = r.substr(fa, 6), fa += 6) : (e = u, 0 === pa && ha(go)), e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? (ba = t, t = e = "COLUMN") : (fa = t, t = u)) : (fa = t, t = u), t } function Zf() { var t, e, n, s; return t = fa, "index" === r.substr(fa, 5).toLowerCase() ? (e = r.substr(fa, 5), fa += 5) : (e = u, 0 === pa && ha(Oo)), e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? (ba = t, t = e = "INDEX") : (fa = t, t = u)) : (fa = t, t = u), t } function zf() { var t, e, n, s; return t = fa, "key" === r.substr(fa, 3).toLowerCase() ? (e = r.substr(fa, 3), fa += 3) : (e = u, 0 === pa && ha(D)), e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? (ba = t, t = e = "KEY") : (fa = t, t = u)) : (fa = t, t = u), t } function Qf() { var t, e, n, s; return t = fa, "unique" === r.substr(fa, 6).toLowerCase() ? (e = r.substr(fa, 6), fa += 6) : (e = u, 0 === pa && ha(M)), e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? (ba = t, t = e = "UNIQUE") : (fa = t, t = u)) : (fa = t, t = u), t } function Jf() { var t, e, n, s; return t = fa, "comment" === r.substr(fa, 7).toLowerCase() ? (e = r.substr(fa, 7), fa += 7) : (e = u, 0 === pa && ha(ko)), e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? (ba = t, t = e = "COMMENT") : (fa = t, t = u)) : (fa = t, t = u), t } function rb() { var t, e, n, s; return t = fa, "constraint" === r.substr(fa, 10).toLowerCase() ? (e = r.substr(fa, 10), fa += 10) : (e = u, 0 === pa && ha(Mo)), e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? (ba = t, t = e = "CONSTRAINT") : (fa = t, t = u)) : (fa = t, t = u), t } function tb() { var t, e, n, s; return t = fa, "concurrently" === r.substr(fa, 12).toLowerCase() ? (e = r.substr(fa, 12), fa += 12) : (e = u, 0 === pa && ha(Do)), e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? (ba = t, t = e = "CONCURRENTLY") : (fa = t, t = u)) : (fa = t, t = u), t } function eb() { var t; return 46 === r.charCodeAt(fa) ? (t = ".", fa++) : (t = u, 0 === pa && ha(Wn)), t } function nb() { var t; return 44 === r.charCodeAt(fa) ? (t = ",", fa++) : (t = u, 0 === pa && ha(Bo)), t } function sb() { var t; return 42 === r.charCodeAt(fa) ? (t = "*", fa++) : (t = u, 0 === pa && ha(ne)), t } function ub() { var t; return 40 === r.charCodeAt(fa) ? (t = "(", fa++) : (t = u, 0 === pa && ha(at)), t } function ob() { var t; return 41 === r.charCodeAt(fa) ? (t = ")", fa++) : (t = u, 0 === pa && ha(it)), t } function ab() { var t; return 91 === r.charCodeAt(fa) ? (t = "[", fa++) : (t = u, 0 === pa && ha(Wo)), t } function ib() { var t; return 93 === r.charCodeAt(fa) ? (t = "]", fa++) : (t = u, 0 === pa && ha(Xo)), t } function lb() { var t; return 59 === r.charCodeAt(fa) ? (t = ";", fa++) : (t = u, 0 === pa && ha(ot)), t } function cb() { var t; return "->" === r.substr(fa, 2) ? (t = "->", fa += 2) : (t = u, 0 === pa && ha(kt)), t } function fb() { var t; return "->>" === r.substr(fa, 3) ? (t = "->>", fa += 3) : (t = u, 0 === pa && ha(Vo)), t } function bb() { var t; return "||" === r.substr(fa, 2) ? (t = "||", fa += 2) : (t = u, 0 === pa && ha(oe)), t } function vb() { var t; return (t = bb()) === u && (t = function () { var t; return "&&" === r.substr(fa, 2) ? (t = "&&", fa += 2) : (t = u, 0 === pa && ha(Zo)), t }()), t } function Lb() { var r, t; for (r = [], (t = Eb()) === u && (t = pb()); t !== u;)r.push(t), (t = Eb()) === u && (t = pb()); return r } function Cb() { var r, t; if (r = [], (t = Eb()) === u && (t = pb()), t !== u) for (; t !== u;)r.push(t), (t = Eb()) === u && (t = pb()); else r = u; return r } function pb() { var t; return (t = function t() { var e, n, s, o, a, i, l; e = fa, "/*" === r.substr(fa, 2) ? (n = "/*", fa += 2) : (n = u, 0 === pa && ha(zo)); if (n !== u) { for (s = [], o = fa, a = fa, pa++, "*/" === r.substr(fa, 2) ? (i = "*/", fa += 2) : (i = u, 0 === pa && ha(Qo)), pa--, i === u ? a = void 0 : (fa = a, a = u), a !== u ? (i = fa, pa++, "/*" === r.substr(fa, 2) ? (l = "/*", fa += 2) : (l = u, 0 === pa && ha(zo)), pa--, l === u ? i = void 0 : (fa = i, i = u), i !== u && (l = wb()) !== u ? o = a = [a, i, l] : (fa = o, o = u)) : (fa = o, o = u), o === u && (o = t()); o !== u;)s.push(o), o = fa, a = fa, pa++, "*/" === r.substr(fa, 2) ? (i = "*/", fa += 2) : (i = u, 0 === pa && ha(Qo)), pa--, i === u ? a = void 0 : (fa = a, a = u), a !== u ? (i = fa, pa++, "/*" === r.substr(fa, 2) ? (l = "/*", fa += 2) : (l = u, 0 === pa && ha(zo)), pa--, l === u ? i = void 0 : (fa = i, i = u), i !== u && (l = wb()) !== u ? o = a = [a, i, l] : (fa = o, o = u)) : (fa = o, o = u), o === u && (o = t()); s !== u ? ("*/" === r.substr(fa, 2) ? (o = "*/", fa += 2) : (o = u, 0 === pa && ha(Qo)), o !== u ? e = n = [n, s, o] : (fa = e, e = u)) : (fa = e, e = u) } else fa = e, e = u; return e }()) === u && (t = function () { var t, e, n, s, o, a; t = fa, "--" === r.substr(fa, 2) ? (e = "--", fa += 2) : (e = u, 0 === pa && ha(Jo)); if (e !== u) { for (n = [], s = fa, o = fa, pa++, a = yb(), pa--, a === u ? o = void 0 : (fa = o, o = u), o !== u && (a = wb()) !== u ? s = o = [o, a] : (fa = s, s = u); s !== u;)n.push(s), s = fa, o = fa, pa++, a = yb(), pa--, a === u ? o = void 0 : (fa = o, o = u), o !== u && (a = wb()) !== u ? s = o = [o, a] : (fa = s, s = u); n !== u ? t = e = [e, n] : (fa = t, t = u) } else fa = t, t = u; return t }()) === u && (t = function () { var t, e, n, s, o, a; t = fa, "//" === r.substr(fa, 2) ? (e = "//", fa += 2) : (e = u, 0 === pa && ha(ra)); if (e !== u) { for (n = [], s = fa, o = fa, pa++, a = yb(), pa--, a === u ? o = void 0 : (fa = o, o = u), o !== u && (a = wb()) !== u ? s = o = [o, a] : (fa = s, s = u); s !== u;)n.push(s), s = fa, o = fa, pa++, a = yb(), pa--, a === u ? o = void 0 : (fa = o, o = u), o !== u && (a = wb()) !== u ? s = o = [o, a] : (fa = s, s = u); n !== u ? t = e = [e, n] : (fa = t, t = u) } else fa = t, t = u; return t }()), t } function db() { var r, t, e, n; return r = fa, (t = Jf()) !== u && Lb() !== u ? ((e = Vf()) === u && (e = null), e !== u && Lb() !== u && (n = uc()) !== u ? (ba = r, r = t = function (r, t, e) { return { type: r.toLowerCase(), keyword: r.toLowerCase(), symbol: t, value: e } }(t, e, n)) : (fa = r, r = u)) : (fa = r, r = u), r } function wb() { var t; return r.length > fa ? (t = r.charAt(fa), fa++) : (t = u, 0 === pa && ha(ta)), t } function Eb() { var t; return ea.test(r.charAt(fa)) ? (t = r.charAt(fa), fa++) : (t = u, 0 === pa && ha(na)), t } function yb() { var t, e; if ((t = function () { var t, e; t = fa, pa++, r.length > fa ? (e = r.charAt(fa), fa++) : (e = u, 0 === pa && ha(ta)); pa--, e === u ? t = void 0 : (fa = t, t = u); return t }()) === u) if (t = [], Yn.test(r.charAt(fa)) ? (e = r.charAt(fa), fa++) : (e = u, 0 === pa && ha(Bn)), e !== u) for (; e !== u;)t.push(e), Yn.test(r.charAt(fa)) ? (e = r.charAt(fa), fa++) : (e = u, 0 === pa && ha(Bn)); else t = u; return t } function hb() { var t, e; return t = fa, ba = fa, Kb = [], (!0 ? void 0 : u) !== u && Lb() !== u ? ((e = Ab()) === u && (e = function () { var t, e; t = fa, function () { var t; return "return" === r.substr(fa, 6).toLowerCase() ? (t = r.substr(fa, 6), fa += 6) : (t = u, 0 === pa && ha(Ro)), t }() !== u && Lb() !== u && (e = mb()) !== u ? (ba = t, t = { type: "return", expr: e }) : (fa = t, t = u); return t }()), e !== u ? (ba = t, t = { type: "proc", stmt: e, vars: Kb }) : (fa = t, t = u)) : (fa = t, t = u), t } function Ab() { var t, e, n, s; return t = fa, (e = gb()) === u && (e = Ob()), e !== u && Lb() !== u ? ((n = function () { var t; return ":=" === r.substr(fa, 2) ? (t = ":=", fa += 2) : (t = u, 0 === pa && ha(Io)), t }()) === u && (n = Vf()), n !== u && Lb() !== u && (s = mb()) !== u ? (ba = t, t = e = { type: "assign", left: e, symbol: n, right: s }) : (fa = t, t = u)) : (fa = t, t = u), t } function mb() { var r; return (r = ni()) === u && (r = function () { var r, t, e, n, s; r = fa, (t = gb()) !== u && Lb() !== u && (e = Ni()) !== u && Lb() !== u && (n = gb()) !== u && Lb() !== u && (s = gi()) !== u ? (ba = r, r = t = { type: "join", ltable: t, rtable: n, op: e, on: s }) : (fa = r, r = u); return r }()) === u && (r = Tb()) === u && (r = function () { var r, t; r = fa, ab() !== u && Lb() !== u && (t = Sb()) !== u && Lb() !== u && ib() !== u ? (ba = r, r = { type: "array", value: t }) : (fa = r, r = u); return r }()), r } function Tb() { var r, t, e, n, s, o, a, i; if (r = fa, (t = Rb()) !== u) { for (e = [], n = fa, (s = Lb()) !== u && (o = Ll()) !== u && (a = Lb()) !== u && (i = Rb()) !== u ? n = s = [s, o, a, i] : (fa = n, n = u); n !== u;)e.push(n), n = fa, (s = Lb()) !== u && (o = Ll()) !== u && (a = Lb()) !== u && (i = Rb()) !== u ? n = s = [s, o, a, i] : (fa = n, n = u); e !== u ? (ba = r, r = t = Mt(t, e)) : (fa = r, r = u) } else fa = r, r = u; return r } function Rb() { var r, t, e, n, s, o, a, i; if (r = fa, (t = Ib()) !== u) { for (e = [], n = fa, (s = Lb()) !== u && (o = pl()) !== u && (a = Lb()) !== u && (i = Ib()) !== u ? n = s = [s, o, a, i] : (fa = n, n = u); n !== u;)e.push(n), n = fa, (s = Lb()) !== u && (o = pl()) !== u && (a = Lb()) !== u && (i = Ib()) !== u ? n = s = [s, o, a, i] : (fa = n, n = u); e !== u ? (ba = r, r = t = Mt(t, e)) : (fa = r, r = u) } else fa = r, r = u; return r } function Ib() { var r, t, e; return (r = rc()) === u && (r = gb()) === u && (r = _b()) === u && (r = Gl()) === u && (r = fa, ub() !== u && Lb() !== u && (t = Tb()) !== u && Lb() !== u && ob() !== u ? (ba = r, (e = t).parentheses = !0, r = e) : (fa = r, r = u)), r } function Nb() { var r, t, e, n, s, o, a; return r = fa, (t = Sl()) !== u ? (e = fa, (n = Lb()) !== u && (s = eb()) !== u && (o = Lb()) !== u && (a = Sl()) !== u ? e = n = [n, s, o, a] : (fa = e, e = u), e === u && (e = null), e !== u ? (ba = r, r = t = function (r, t) { const e = { name: [r] }; return null !== t && (e.schema = r, e.name = t[3]), e }(t, e)) : (fa = r, r = u)) : (fa = r, r = u), r } function _b() { var r, t, e; return r = fa, (t = Nb()) !== u && Lb() !== u && ub() !== u && Lb() !== u ? ((e = Sb()) === u && (e = null), e !== u && Lb() !== u && ob() !== u ? (ba = r, r = t = function (r, t) { return { type: "function", name: r, args: { type: "expr_list", value: t } } }(t, e)) : (fa = r, r = u)) : (fa = r, r = u), r === u && (r = fa, (t = Nb()) !== u && (ba = r, t = function (r) { return { type: "function", name: r, args: null } }(t)), r = t), r } function Sb() { var r, t, e, n, s, o, a, i; if (r = fa, (t = Ib()) !== u) { for (e = [], n = fa, (s = Lb()) !== u && (o = nb()) !== u && (a = Lb()) !== u && (i = Ib()) !== u ? n = s = [s, o, a, i] : (fa = n, n = u); n !== u;)e.push(n), n = fa, (s = Lb()) !== u && (o = nb()) !== u && (a = Lb()) !== u && (i = Ib()) !== u ? n = s = [s, o, a, i] : (fa = n, n = u); e !== u ? (ba = r, r = t = Yb(t, e)) : (fa = r, r = u) } else fa = r, r = u; return r } function gb() { var t, e, n, s, o, a, i; if (t = fa, (e = Bf()) !== u) { for (n = [], sa.test(r.charAt(fa)) ? (s = r.charAt(fa), fa++) : (s = u, 0 === pa && ha(ua)); s !== u;)n.push(s), sa.test(r.charAt(fa)) ? (s = r.charAt(fa), fa++) : (s = u, 0 === pa && ha(ua)); n !== u && (s = Bf()) !== u ? (ba = t, t = e = { type: "var", name: n.join(""), prefix: "$$", suffix: "$$" }) : (fa = t, t = u) } else fa = t, t = u; if (t === u) { if (t = fa, (e = Yf()) !== u) if ((n = Ul()) !== u) if ((s = Yf()) !== u) { for (o = [], sa.test(r.charAt(fa)) ? (a = r.charAt(fa), fa++) : (a = u, 0 === pa && ha(ua)); a !== u;)o.push(a), sa.test(r.charAt(fa)) ? (a = r.charAt(fa), fa++) : (a = u, 0 === pa && ha(ua)); o !== u && (a = Yf()) !== u && (i = Ul()) !== u ? (ba = fa, (function (r, t, e) { if (r !== e) return !0 }(n, 0, i) ? u : void 0) !== u && Yf() !== u ? (ba = t, t = e = function (r, t, e) { return { type: "var", name: t.join(""), prefix: `$${r}$`, suffix: `$${e}$` } }(n, o, i)) : (fa = t, t = u)) : (fa = t, t = u) } else fa = t, t = u; else fa = t, t = u; else fa = t, t = u; t === u && (t = fa, (e = Wf()) !== u && (n = Ob()) !== u ? (ba = t, t = e = function (r, t) { return { type: "var", ...t, prefix: r } }(e, n)) : (fa = t, t = u)) } return t } function Ob() { var t, e, n, s, o; return t = fa, 34 === r.charCodeAt(fa) ? (e = '"', fa++) : (e = u, 0 === pa && ha(ct)), e === u && (e = null), e !== u && (n = Ml()) !== u && (s = function () { var t, e, n, s, o; t = fa, e = [], n = fa, 46 === r.charCodeAt(fa) ? (s = ".", fa++) : (s = u, 0 === pa && ha(Wn)); s !== u && (o = Ml()) !== u ? n = s = [s, o] : (fa = n, n = u); for (; n !== u;)e.push(n), n = fa, 46 === r.charCodeAt(fa) ? (s = ".", fa++) : (s = u, 0 === pa && ha(Wn)), s !== u && (o = Ml()) !== u ? n = s = [s, o] : (fa = n, n = u); e !== u && (ba = t, e = function (r) { const t = []; for (let e = 0; e < r.length; e++)t.push(r[e][1]); return t }(e)); return t = e }()) !== u ? (34 === r.charCodeAt(fa) ? (o = '"', fa++) : (o = u, 0 === pa && ha(ct)), o === u && (o = null), o !== u ? (ba = t, t = e = function (r, t, e, n) { if (r && !n || !r && n) throw new Error("double quoted not match"); return Kb.push(t), { type: "var", name: t, members: e, quoted: r && n ? '"' : null, prefix: null } }(e, n, s, o)) : (fa = t, t = u)) : (fa = t, t = u), t === u && (t = fa, (e = lc()) !== u && (ba = t, e = { type: "var", name: e.value, members: [], quoted: null, prefix: null }), t = e), t } function xb() { var t; return (t = function () { var r, t; r = fa, (t = Mb()) === u && (t = Ub()); t !== u && Lb() !== u && ab() !== u && Lb() !== u && ib() !== u && Lb() !== u && ab() !== u && Lb() !== u && ib() !== u ? (ba = r, e = t, t = { ...e, array: "two" }, r = t) : (fa = r, r = u); var e; r === u && (r = fa, (t = Mb()) === u && (t = Ub()), t !== u && Lb() !== u && ab() !== u && Lb() !== u && ib() !== u ? (ba = r, t = function (r) { return { ...r, array: "one" } }(t), r = t) : (fa = r, r = u)); return r }()) === u && (t = Ub()) === u && (t = Mb()) === u && (t = function () { var t, e, n, s; t = fa, (e = Mf()) === u && (e = Df()); if (e !== u) if (Lb() !== u) if (ub() !== u) if (Lb() !== u) { if (n = [], Xn.test(r.charAt(fa)) ? (s = r.charAt(fa), fa++) : (s = u, 0 === pa && ha(Vn)), s !== u) for (; s !== u;)n.push(s), Xn.test(r.charAt(fa)) ? (s = r.charAt(fa), fa++) : (s = u, 0 === pa && ha(Vn)); else n = u; n !== u && (s = Lb()) !== u && ob() !== u ? (ba = t, e = { dataType: e, length: parseInt(n.join(""), 10), parentheses: !0 }, t = e) : (fa = t, t = u) } else fa = t, t = u; else fa = t, t = u; else fa = t, t = u; else fa = t, t = u; t === u && (t = fa, (e = Mf()) === u && (e = Df()), e !== u && (ba = t, e = ia(e)), (t = e) === u && (t = function () { var t, e, n, s, o, a; t = fa, (e = Pf()) === u && (e = Gf()); if (e !== u) if (Lb() !== u) if ((n = ub()) !== u) if (Lb() !== u) { if (s = [], Xn.test(r.charAt(fa)) ? (o = r.charAt(fa), fa++) : (o = u, 0 === pa && ha(Vn)), o !== u) for (; o !== u;)s.push(o), Xn.test(r.charAt(fa)) ? (o = r.charAt(fa), fa++) : (o = u, 0 === pa && ha(Vn)); else s = u; s !== u && (o = Lb()) !== u && ob() !== u && Lb() !== u ? ((a = Db()) === u && (a = null), a !== u ? (ba = t, e = function (r, t, e) { return { dataType: r, length: parseInt(t.join(""), 10), parentheses: !0, suffix: e } }(e, s, a), t = e) : (fa = t, t = u)) : (fa = t, t = u) } else fa = t, t = u; else fa = t, t = u; else fa = t, t = u; else fa = t, t = u; t === u && (t = fa, (e = Pf()) === u && (e = Gf()), e !== u && Lb() !== u ? ((n = Db()) === u && (n = null), n !== u ? (ba = t, e = function (r, t) { return { dataType: r, suffix: t } }(e, n), t = e) : (fa = t, t = u)) : (fa = t, t = u)); return t }())); return t }()) === u && (t = function () { var t, e; t = fa, (e = function () { var t, e, n, s; return t = fa, "json" === r.substr(fa, 4).toLowerCase() ? (e = r.substr(fa, 4), fa += 4) : (e = u, 0 === pa && ha(gu)), e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? (ba = t, t = e = "JSON") : (fa = t, t = u)) : (fa = t, t = u), t }()) === u && (e = function () { var t, e, n, s; return t = fa, "jsonb" === r.substr(fa, 5).toLowerCase() ? (e = r.substr(fa, 5), fa += 5) : (e = u, 0 === pa && ha(Ou)), e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? (ba = t, t = e = "JSONB") : (fa = t, t = u)) : (fa = t, t = u), t }()); e !== u && (ba = t, e = ia(e)); return t = e }()) === u && (t = function () { var t, e; t = fa, (e = function () { var t, e, n, s; return t = fa, "geometry" === r.substr(fa, 8).toLowerCase() ? (e = r.substr(fa, 8), fa += 8) : (e = u, 0 === pa && ha(xu)), e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? (ba = t, t = e = "GEOMETRY") : (fa = t, t = u)) : (fa = t, t = u), t }()) !== u && (ba = t, e = { dataType: e }); return t = e }()) === u && (t = function () { var r, t; r = fa, (t = Rf()) === u && (t = If()) === u && (t = Nf()) === u && (t = _f()); t !== u && ab() !== u && Lb() !== u && ib() !== u ? (ba = r, r = t = { dataType: t + "[]" }) : (fa = r, r = u); r === u && (r = fa, (t = Rf()) === u && (t = If()) === u && (t = Nf()) === u && (t = _f()), t !== u && (ba = r, t = function (r) { return { dataType: r } }(t)), r = t); return r }()) === u && (t = function () { var t, e; t = fa, (e = function () { var t, e, n, s; return t = fa, "uuid" === r.substr(fa, 4).toLowerCase() ? (e = r.substr(fa, 4), fa += 4) : (e = u, 0 === pa && ha(Qu)), e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? (ba = t, t = e = "UUID") : (fa = t, t = u)) : (fa = t, t = u), t }()) !== u && (ba = t, e = { dataType: e }); return t = e }()) === u && (t = function () { var t, e; t = fa, (e = function () { var t, e, n, s; return t = fa, "bool" === r.substr(fa, 4).toLowerCase() ? (e = r.substr(fa, 4), fa += 4) : (e = u, 0 === pa && ha(Eu)), e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? (ba = t, t = e = "BOOL") : (fa = t, t = u)) : (fa = t, t = u), t }()) === u && (e = function () { var t, e, n, s; return t = fa, "boolean" === r.substr(fa, 7).toLowerCase() ? (e = r.substr(fa, 7), fa += 7) : (e = u, 0 === pa && ha(yu)), e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? (ba = t, t = e = "BOOLEAN") : (fa = t, t = u)) : (fa = t, t = u), t }()); e !== u && (ba = t, e = oa(e)); return t = e }()) === u && (t = function () { var r, t, e; r = fa, (t = gf()) !== u && Lb() !== u && (e = zi()) !== u ? (ba = r, n = t, (s = e).parentheses = !0, r = t = { dataType: n, expr: s }) : (fa = r, r = u); var n, s; return r }()) === u && (t = function () { var r, t; r = fa, (t = mf()) === u && (t = jf()); t !== u && (ba = r, t = ia(t)); return r = t }()) === u && (t = function () { var t, e; t = fa, "bytea" === r.substr(fa, 5).toLowerCase() ? (e = r.substr(fa, 5), fa += 5) : (e = u, 0 === pa && ha(aa)); e !== u && (ba = t, e = { dataType: "BYTEA" }); return t = e }()) === u && (t = function () { var t, e; t = fa, (e = function () { var t, e, n, s; return t = fa, "oid" === r.substr(fa, 3).toLowerCase() ? (e = r.substr(fa, 3), fa += 3) : (e = u, 0 === pa && ha(Ju)), e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? (ba = t, t = e = "OID") : (fa = t, t = u)) : (fa = t, t = u), t }()) === u && (e = function () { var t, e, n, s; return t = fa, "regclass" === r.substr(fa, 8).toLowerCase() ? (e = r.substr(fa, 8), fa += 8) : (e = u, 0 === pa && ha(ro)), e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? (ba = t, t = e = "REGCLASS") : (fa = t, t = u)) : (fa = t, t = u), t }()) === u && (e = function () { var t, e, n, s; return t = fa, "regcollation" === r.substr(fa, 12).toLowerCase() ? (e = r.substr(fa, 12), fa += 12) : (e = u, 0 === pa && ha(to)), e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? (ba = t, t = e = "REGCOLLATION") : (fa = t, t = u)) : (fa = t, t = u), t }()) === u && (e = function () { var t, e, n, s; return t = fa, "regconfig" === r.substr(fa, 9).toLowerCase() ? (e = r.substr(fa, 9), fa += 9) : (e = u, 0 === pa && ha(eo)), e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? (ba = t, t = e = "REGCONFIG") : (fa = t, t = u)) : (fa = t, t = u), t }()) === u && (e = function () { var t, e, n, s; return t = fa, "regdictionary" === r.substr(fa, 13).toLowerCase() ? (e = r.substr(fa, 13), fa += 13) : (e = u, 0 === pa && ha(no)), e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? (ba = t, t = e = "REGDICTIONARY") : (fa = t, t = u)) : (fa = t, t = u), t }()) === u && (e = function () { var t, e, n, s; return t = fa, "regnamespace" === r.substr(fa, 12).toLowerCase() ? (e = r.substr(fa, 12), fa += 12) : (e = u, 0 === pa && ha(so)), e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? (ba = t, t = e = "REGNAMESPACE") : (fa = t, t = u)) : (fa = t, t = u), t }()) === u && (e = function () { var t, e, n, s; return t = fa, "regoper" === r.substr(fa, 7).toLowerCase() ? (e = r.substr(fa, 7), fa += 7) : (e = u, 0 === pa && ha(uo)), e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? (ba = t, t = e = "REGOPER") : (fa = t, t = u)) : (fa = t, t = u), t }()) === u && (e = function () { var t, e, n, s; return t = fa, "regoperator" === r.substr(fa, 11).toLowerCase() ? (e = r.substr(fa, 11), fa += 11) : (e = u, 0 === pa && ha(oo)), e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? (ba = t, t = e = "REGOPERATOR") : (fa = t, t = u)) : (fa = t, t = u), t }()) === u && (e = function () { var t, e, n, s; return t = fa, "regproc" === r.substr(fa, 7).toLowerCase() ? (e = r.substr(fa, 7), fa += 7) : (e = u, 0 === pa && ha(ao)), e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? (ba = t, t = e = "REGPROC") : (fa = t, t = u)) : (fa = t, t = u), t }()) === u && (e = function () { var t, e, n, s; return t = fa, "regprocedure" === r.substr(fa, 12).toLowerCase() ? (e = r.substr(fa, 12), fa += 12) : (e = u, 0 === pa && ha(io)), e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? (ba = t, t = e = "REGPROCEDURE") : (fa = t, t = u)) : (fa = t, t = u), t }()) === u && (e = function () { var t, e, n, s; return t = fa, "regrole" === r.substr(fa, 7).toLowerCase() ? (e = r.substr(fa, 7), fa += 7) : (e = u, 0 === pa && ha(lo)), e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? (ba = t, t = e = "REGROLE") : (fa = t, t = u)) : (fa = t, t = u), t }()) === u && (e = function () { var t, e, n, s; return t = fa, "regtype" === r.substr(fa, 7).toLowerCase() ? (e = r.substr(fa, 7), fa += 7) : (e = u, 0 === pa && ha(co)), e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? (ba = t, t = e = "REGTYPE") : (fa = t, t = u)) : (fa = t, t = u), t }()); e !== u && (ba = t, e = oa(e)); return t = e }()), t } function Ub() { var t, e, n, s; if (t = fa, (e = Cf()) === u && (e = pf()), e !== u) if (Lb() !== u) if (ub() !== u) if (Lb() !== u) { if (n = [], Xn.test(r.charAt(fa)) ? (s = r.charAt(fa), fa++) : (s = u, 0 === pa && ha(Vn)), s !== u) for (; s !== u;)n.push(s), Xn.test(r.charAt(fa)) ? (s = r.charAt(fa), fa++) : (s = u, 0 === pa && ha(Vn)); else n = u; n !== u && (s = Lb()) !== u && ob() !== u ? (ba = t, t = e = { dataType: e, length: parseInt(n.join(""), 10), parentheses: !0 }) : (fa = t, t = u) } else fa = t, t = u; else fa = t, t = u; else fa = t, t = u; else fa = t, t = u; return t === u && (t = fa, (e = Cf()) === u && (e = function () { var t, e, n, s; return t = fa, "character" === r.substr(fa, 9).toLowerCase() ? (e = r.substr(fa, 9), fa += 9) : (e = u, 0 === pa && ha(Ur)), e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? (ba = t, t = e = "CHARACTER") : (fa = t, t = u)) : (fa = t, t = u), t }()), e !== u && (ba = t, e = function (r) { return { dataType: r } }(e)), (t = e) === u && (t = fa, (e = pf()) !== u && (ba = t, e = ia(e)), t = e)), t } function kb() { var t, e, n; return t = fa, (e = Ef()) === u && (e = null), e !== u && Lb() !== u ? ((n = function () { var t, e, n, s; return t = fa, "zerofill" === r.substr(fa, 8).toLowerCase() ? (e = r.substr(fa, 8), fa += 8) : (e = u, 0 === pa && ha(_u)), e !== u ? (n = fa, pa++, s = Dl(), pa--, s === u ? n = void 0 : (fa = n, n = u), n !== u ? (ba = t, t = e = "ZEROFILL") : (fa = t, t = u)) : (fa = t, t = u), t }()) === u && (n = null), n !== u ? (ba = t, t = e = function (r, t) { const e = []; return r && e.push(r), t && e.push(t), e }(e, n)) : (fa = t, t = u)) : (fa = t, t = u), t } function Mb() { var t, e, n, s, o, a, i, l, c, f, b, v, L, C; if (t = fa, (e = df()) === u && (e = wf()) === u && (e = yf()) === u && (e = hf()) === u && (e = Af()) === u && (e = Tf()) === u && (e = Sf()) === u && (e = Of()) === u && (e = xf()) === u && (e = mf()) === u && (e = Uf()) === u && (e = kf()), e !== u) if ((n = Lb()) !== u) if ((s = ub()) !== u) if ((o = Lb()) !== u) { if (a = [], Xn.test(r.charAt(fa)) ? (i = r.charAt(fa), fa++) : (i = u, 0 === pa && ha(Vn)), i !== u) for (; i !== u;)a.push(i), Xn.test(r.charAt(fa)) ? (i = r.charAt(fa), fa++) : (i = u, 0 === pa && ha(Vn)); else a = u; if (a !== u) if ((i = Lb()) !== u) { if (l = fa, (c = nb()) !== u) if ((f = Lb()) !== u) { if (b = [], Xn.test(r.charAt(fa)) ? (v = r.charAt(fa), fa++) : (v = u, 0 === pa && ha(Vn)), v !== u) for (; v !== u;)b.push(v), Xn.test(r.charAt(fa)) ? (v = r.charAt(fa), fa++) : (v = u, 0 === pa && ha(Vn)); else b = u; b !== u ? l = c = [c, f, b] : (fa = l, l = u) } else fa = l, l = u; else fa = l, l = u; l === u && (l = null), l !== u && (c = Lb()) !== u && (f = ob()) !== u && (b = Lb()) !== u ? ((v = kb()) === u && (v = null), v !== u ? (ba = t, L = l, C = v, t = e = { dataType: e, length: parseInt(a.join(""), 10), scale: L && parseInt(L[2].join(""), 10), parentheses: !0, suffix: C }) : (fa = t, t = u)) : (fa = t, t = u) } else fa = t, t = u; else fa = t, t = u } else fa = t, t = u; else fa = t, t = u; else fa = t, t = u; else fa = t, t = u; if (t === u) { if (t = fa, (e = df()) === u && (e = wf()) === u && (e = yf()) === u && (e = hf()) === u && (e = Af()) === u && (e = Tf()) === u && (e = Sf()) === u && (e = Of()) === u && (e = xf()) === u && (e = mf()) === u && (e = Uf()) === u && (e = kf()), e !== u) { if (n = [], Xn.test(r.charAt(fa)) ? (s = r.charAt(fa), fa++) : (s = u, 0 === pa && ha(Vn)), s !== u) for (; s !== u;)n.push(s), Xn.test(r.charAt(fa)) ? (s = r.charAt(fa), fa++) : (s = u, 0 === pa && ha(Vn)); else n = u; n !== u && (s = Lb()) !== u ? ((o = kb()) === u && (o = null), o !== u ? (ba = t, t = e = function (r, t, e) { return { dataType: r, length: parseInt(t.join(""), 10), suffix: e } }(e, n, o)) : (fa = t, t = u)) : (fa = t, t = u) } else fa = t, t = u; t === u && (t = fa, (e = df()) === u && (e = wf()) === u && (e = yf()) === u && (e = hf()) === u && (e = Af()) === u && (e = Tf()) === u && (e = Sf()) === u && (e = Of()) === u && (e = xf()) === u && (e = mf()) === u && (e = Uf()) === u && (e = kf()), e !== u && (n = Lb()) !== u ? ((s = kb()) === u && (s = null), s !== u && (o = Lb()) !== u ? (ba = t, t = e = function (r, t) { return { dataType: r, suffix: t } }(e, s)) : (fa = t, t = u)) : (fa = t, t = u)) } return t } function Db() { var t, e, n; return t = fa, "without" === r.substr(fa, 7).toLowerCase() ? (e = r.substr(fa, 7), fa += 7) : (e = u, 0 === pa && ha(la)), e === u && ("with" === r.substr(fa, 4).toLowerCase() ? (e = r.substr(fa, 4), fa += 4) : (e = u, 0 === pa && ha(dt))), e !== u && Lb() !== u && Pf() !== u && Lb() !== u ? ("zone" === r.substr(fa, 4).toLowerCase() ? (n = r.substr(fa, 4), fa += 4) : (n = u, 0 === pa && ha(ca)), n !== u ? (ba = t, t = e = [e.toUpperCase(), "TIME", "ZONE"]) : (fa = t, t = u)) : (fa = t, t = u), t } const $b = { ALTER: !0, ALL: !0, ADD: !0, AND: !0, AS: !0, ASC: !0, BETWEEN: !0, BY: !0, CALL: !0, CASE: !0, CREATE: !0, CONTAINS: !0, CURRENT_DATE: !0, CURRENT_TIME: !0, CURRENT_TIMESTAMP: !0, CURRENT_USER: !0, DELETE: !0, DESC: !0, DISTINCT: !0, DROP: !0, ELSE: !0, END: !0, EXISTS: !0, EXPLAIN: !0, FALSE: !0, FROM: !0, FULL: !0, GROUP: !0, HAVING: !0, IN: !0, INNER: !0, INSERT: !0, INTO: !0, IS: !0, JOIN: !0, JSON: !0, LEFT: !0, LIKE: !0, LIMIT: !0, NOT: !0, NULL: !0, NULLS: !0, OFFSET: !0, ON: !0, OR: !0, ORDER: !0, OUTER: !0, RECURSIVE: !0, RENAME: !0, RIGHT: !0, ROWS: !0, SELECT: !0, SESSION_USER: !0, SET: !0, SHOW: !0, SYSTEM_USER: !0, TABLE: !0, THEN: !0, TRUE: !0, TRUNCATE: !0, UNION: !0, UPDATE: !0, USING: !0, WITH: !0, WHEN: !0, WHERE: !0, WINDOW: !0, GLOBAL: !0, SESSION: !0, LOCAL: !0, PERSIST: !0, PERSIST_ONLY: !0 }, Pb = { avg: !0, sum: !0, count: !0, max: !0, min: !0, group_concat: !0, std: !0, variance: !0, current_date: !0, current_time: !0, current_timestamp: !0, current_user: !0, user: !0, session_user: !0, system_user: !0 }; function Gb() { return t.includeLocations ? { loc: ya(ba, fa) } : {} } function Fb(r, t) { return { type: "unary_expr", operator: r, expr: t } } function jb(r, t, e) { return { type: "binary_expr", operator: r, left: t, right: e, ...Gb() } } function Hb(r) { const t = n(Number.MAX_SAFE_INTEGER); return !(n(r) < t) } function Yb(r, t, e = 3) { const n = [r]; for (let r = 0; r < t.length; r++)delete t[r][e].tableList, delete t[r][e].columnList, n.push(t[r][e]); return n } function Bb(r, t) { let e = r; for (let r = 0; r < t.length; r++)e = jb(t[r][1], e, t[r][3]); return e } function Wb(r) { const t = Qb[r]; return t || (r || null) } function Xb(r) { const t = new Set; for (let e of r.keys()) { const r = e.split("::"); if (!r) { t.add(e); break } r && r[1] && (r[1] = Wb(r[1])), t.add(r.join("::")) } return Array.from(t) } function Vb(r) { return "string" == typeof r ? { type: "same", value: r } : r } function qb(r) { const t = r.type || r.ast && r.ast.type; if ("aggr_func" === t) throw new Error("Aggregations are not supported in lambda expressions"); if ("select" === t) throw new Error("Subqueries are not supported in lambda expressions"); return "binary_expr" === t && (qb(r.left), qb(r.right)), !0 } let Kb = []; const Zb = new Set, zb = new Set, Qb = {}; if ((e = a()) !== u && fa === r.length) return e; throw e !== u && fa < r.length && ha({ type: "end" }), Aa(Ca, La < r.length ? r.charAt(La) : null, La < r.length ? ya(La, La + 1) : ya(La, La))}}}, function(r, t, e) { r.exports = e(16) }, function(r, t, e) { "use strict"; e.r(t), e.d(t, "Parser", (function () { return Dt })), e.d(t, "util", (function () { return n })); var n = {}; function s(r) { return function (r) { if (Array.isArray(r)) return u(r) }(r) || function (r) { if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r) }(r) || function (r, t) { if (!r) return; if ("string" == typeof r) return u(r, t); var e = Object.prototype.toString.call(r).slice(8, -1); "Object" === e && r.constructor && (e = r.constructor.name); if ("Map" === e || "Set" === e) return Array.from(r); if ("Arguments" === e || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e)) return u(r, t) }(r) || function () { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.") }() } function u(r, t) { (null == t || t > r.length) && (t = r.length); for (var e = 0, n = new Array(t); e < t; e++)n[e] = r[e]; return n } function o(r) { if (!r) return []; var t = r.keyword, e = r.type; return [t.toUpperCase(), Er(e)] } function a(r) { if (r) { var t = r.type, e = r.expr, n = r.symbol, u = t.toUpperCase(), a = []; switch (a.push(u), u) { case "KEY_BLOCK_SIZE": n && a.push(n), a.push(hr(e)); break; case "BTREE": case "HASH": a.length = 0, a.push.apply(a, s(o(r))); break; case "WITH PARSER": a.push(e); break; case "VISIBLE": case "INVISIBLE": break; case "COMMENT": a.shift(), a.push(Ir(r)); break; case "DATA_COMPRESSION": a.push(n, Er(e.value), mr(e.on)); break; default: a.push(n, hr(e)) }return a.filter(yr).join(" ") } } function i(r) { return r ? r.map(a) : [] } function l(r) { var t = r.constraint_type, e = r.index_type, n = r.index_options, u = void 0 === n ? [] : n, a = r.definition, l = r.on, c = r.with, f = []; if (f.push.apply(f, s(o(e))), a && a.length) { var b = "CHECK" === Er(t) ? "(".concat(vt(a[0]), ")") : "(".concat(a.map((function (r) { return vt(r) })).join(", "), ")"); f.push(b) } return f.push(i(u).join(" ")), c && f.push("WITH (".concat(i(c).join(", "), ")")), l && f.push("ON [".concat(l, "]")), f } function c(r) { return function (r) { if (Array.isArray(r)) return f(r) }(r) || function (r) { if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r) }(r) || function (r, t) { if (!r) return; if ("string" == typeof r) return f(r, t); var e = Object.prototype.toString.call(r).slice(8, -1); "Object" === e && r.constructor && (e = r.constructor.name); if ("Map" === e || "Set" === e) return Array.from(r); if ("Arguments" === e || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e)) return f(r, t) }(r) || function () { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.") }() } function f(r, t) { (null == t || t > r.length) && (t = r.length); for (var e = 0, n = new Array(t); e < t; e++)n[e] = r[e]; return n } function b(r) { if (r) { var t = r.constraint, e = r.constraint_type, n = r.enforced, s = r.index, u = r.keyword, o = r.reference_definition, a = [], i = vr().database; a.push(Er(u)), a.push(dr(t)); var f = Er(e); return "sqlite" === i && "UNIQUE KEY" === f && (f = "UNIQUE"), a.push(f), a.push("sqlite" !== i && dr(s)), a.push.apply(a, c(l(r))), a.push.apply(a, c(J(o))), a.push(Er(n)), a.filter(yr).join(" ") } } function v(r) { if ("string" == typeof r) return r; var t = r.window_specification; return "(".concat(function (r) { var t = r.name, e = r.partitionby, n = r.orderby, s = r.window_frame_clause; return [t, Ct(e, "partition by"), Ct(n, "order by"), Er(s)].filter(yr).join(" ") }(t), ")") } function L(r) { var t = r.name, e = r.as_window_specification; return "".concat(t, " AS ").concat(v(e)) } function C(r) { var t = r.args, e = r.name, n = r.consider_nulls, s = void 0 === n ? "" : n, u = t ? vt(t).join(", ") : "", o = function (r) { switch (Er(r)) { case "NTH_VALUE": case "LEAD": case "LAG": return !1; default: return !0 } }(e); return [e, "(", u, !o && ")", s && " ", s, o && ")"].filter(yr).join("") } function p(r) { if (r) { var t = r.as_window_specification, e = r.expr, n = r.keyword, s = r.type, u = r.parentheses, o = Er(s); if ("WINDOW" === o) return "OVER ".concat(v(t)); if ("ON UPDATE" === o) { var a = "".concat(Er(s), " ").concat(Er(n)), i = vt(e) || []; return u && (a = "".concat(a, "(").concat(i.join(", "), ")")), a } throw new Error("unknown over type") } } function d(r) { var t = r.arrows, e = void 0 === t ? [] : t, n = r.collate, s = r.target, u = r.expr, o = r.keyword, a = r.symbol, i = r.as, l = r.properties, c = void 0 === l ? [] : l, f = s.length, b = s.dataType, v = s.parentheses, L = s.quoted, C = s.scale, p = s.suffix, d = s.expr, w = d ? vt(d) : ""; null != f && (w = C ? "".concat(f, ", ").concat(C) : f), v && (w = "(".concat(w, ")")), p && p.length && (w += " ".concat(p.join(" "))); var E = vt(u), y = "::", h = ""; return "as" === a && (E = "".concat(Er(o), "(").concat(E), h = ")", y = " ".concat(a.toUpperCase(), " ")), h += e.map((function (r, t) { return ir(r, hr, c[t]) })).join(" "), i && (h += " AS ".concat(dr(i))), n && (h += " ".concat(wr(n).join(" "))), [E, y, L, b, L, function (r) { if (!r || !r.array) return ""; switch (r.array) { case "one": return "[]"; case "two": return "[][]" } }(s), w, h].filter(yr).join("") } function w(r) { var t = r.args, e = r.name, n = r.args_parentheses, s = r.parentheses, u = r.over, o = r.collate, a = r.suffix, i = wr(o).join(" "), l = p(u), c = vt(a), f = [hr(e.schema), e.name.map(hr).join(".")].filter(yr).join("."); if (!t) return [f, l].filter(yr).join(" "); var b = r.separator || ", "; "TRIM" === Er(f) && (b = " "); var v = [f]; return v.push(!1 === n ? " " : "("), v.push(vt(t).join(b)), !1 !== n && v.push(")"), v = [v.join(""), c].filter(yr).join(" "), [s ? "(".concat(v, ")") : v, i, l].filter(yr).join(" ") } function E(r, t) { var e = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (!e) { if (Array.isArray(r) || (e = function (r, t) { if (!r) return; if ("string" == typeof r) return y(r, t); var e = Object.prototype.toString.call(r).slice(8, -1); "Object" === e && r.constructor && (e = r.constructor.name); if ("Map" === e || "Set" === e) return Array.from(r); if ("Arguments" === e || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e)) return y(r, t) }(r)) || t && r && "number" == typeof r.length) { e && (r = e); var n = 0, s = function () { }; return { s: s, n: function () { return n >= r.length ? { done: !0 } : { done: !1, value: r[n++] } }, e: function (r) { throw r }, f: s } } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.") } var u, o = !0, a = !1; return { s: function () { e = e.call(r) }, n: function () { var r = e.next(); return o = r.done, r }, e: function (r) { a = !0, u = r }, f: function () { try { o || null == e.return || e.return() } finally { if (a) throw u } } } } function y(r, t) { (null == t || t > r.length) && (t = r.length); for (var e = 0, n = new Array(t); e < t; e++)n[e] = r[e]; return n } function h(r) { var t = r.operator || r.op, e = vt(r.right), n = !1; if (Array.isArray(e)) { switch (t) { case "=": t = "IN"; break; case "!=": t = "NOT IN"; break; case "BETWEEN": case "NOT BETWEEN": n = !0, e = "".concat(e[0], " AND ").concat(e[1]) }n || (e = "(".concat(e.join(", "), ")")) } var s = r.right.escape || {}, u = [Array.isArray(r.left) ? r.left.map(vt).join(", ") : vt(r.left), t, e, Er(s.type), vt(s.value)].filter(yr).join(" "), o = [r.parentheses ? "(".concat(u, ")") : u], a = r.suffix; if (!a) return o.join(" "); var i, l = E(a); try { for (l.s(); !(i = l.n()).done;){ var c = i.value; switch (c.type) { case "collate": o.push(wr(c).join(" ")) } } } catch (r) { l.e(r) } finally { l.f() } return o.filter(yr).join(" ") } function A(r) { return function (r) { if (Array.isArray(r)) return m(r) }(r) || function (r) { if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r) }(r) || function (r, t) { if (!r) return; if ("string" == typeof r) return m(r, t); var e = Object.prototype.toString.call(r).slice(8, -1); "Object" === e && r.constructor && (e = r.constructor.name); if ("Map" === e || "Set" === e) return Array.from(r); if ("Arguments" === e || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e)) return m(r, t) }(r) || function () { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.") }() } function m(r, t) { (null == t || t > r.length) && (t = r.length); for (var e = 0, n = new Array(t); e < t; e++)n[e] = r[e]; return n } function T(r) { return r ? [Er(r.prefix), vt(r.value), Er(r.suffix)] : [] } function R(r) { return r ? r.fetch ? (e = (t = r).fetch, n = t.offset, [].concat(A(T(n)), A(T(e))).filter(yr).join(" ")) : function (r) { var t = r.seperator, e = r.value; return 1 === e.length && "offset" === t ? lr("OFFSET", vt(e[0])) : lr("LIMIT", e.map(vt).join("".concat("offset" === t ? " " : "").concat(Er(t), " "))) }(r) : ""; var t, e, n } function I(r) { if (r && 0 !== r.length) { var t = r[0].recursive ? "RECURSIVE " : "", e = r.map((function (r) { var t = r.name, e = r.stmt, n = r.columns, s = Array.isArray(n) ? "(".concat(n.map(z).join(", "), ")") : ""; return "".concat("default" === t.type ? dr(t.value) : hr(t)).concat(s, " AS (").concat(vt(e), ")") })).join(", "); return "WITH ".concat(t).concat(e) } } function N(r) { if (r && r.position) { var t = r.keyword, e = r.expr, n = [], s = Er(t); switch (s) { case "VAR": n.push(e.map(bt).join(", ")); break; default: n.push(s, "string" == typeof e ? dr(e) : vt(e)) }return n.filter(yr).join(" ") } } function _(r) { var t = r.as_struct_val, e = r.columns, n = r.distinct, s = r.for, u = r.from, o = r.for_sys_time_as_of, a = void 0 === o ? {} : o, i = r.locking_read, l = r.groupby, c = r.having, f = r.into, b = void 0 === f ? {} : f, v = r.limit, L = r.options, C = r.orderby, p = r.parentheses_symbol, d = r.qualify, w = r.top, E = r.window, y = r.with, h = r.where, A = [I(y), "SELECT", Er(t)]; Array.isArray(L) && A.push(L.join(" ")), A.push(function (r) { if (r) { if ("string" == typeof r) return r; var t = r.type, e = r.columns, n = [Er(t)]; return e && n.push("(".concat(e.map(z).join(", "), ")")), n.filter(yr).join(" ") } }(n), Cr(w), sr(e, u)); var m = b.position, T = ""; m && (T = ir("INTO", N, b)), "column" === m && A.push(T), A.push(ir("FROM", B, u)), "from" === m && A.push(T); var _ = a || {}, S = _.keyword, g = _.expr; A.push(ir(S, vt, g)), A.push(ir("WHERE", vt, h)), A.push(lr("GROUP BY", Lt(l).join(", "))), A.push(ir("HAVING", vt, c)), A.push(ir("QUALIFY", vt, d)), A.push(ir("WINDOW", vt, E)), A.push(Ct(C, "order by")), A.push(R(v)), A.push(Er(i)), "end" === m && A.push(T), A.push(function (r) { if (r) { var t = r.expr, e = r.keyword, n = [Er(r.type), Er(e)]; return t ? "".concat(n.join(" "), "(").concat(vt(t), ")") : n.join(" ") } }(s)); var O = A.filter(yr).join(" "); return p ? "(".concat(O, ")") : O } function S(r, t) { var e = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (!e) { if (Array.isArray(r) || (e = function (r, t) { if (!r) return; if ("string" == typeof r) return g(r, t); var e = Object.prototype.toString.call(r).slice(8, -1); "Object" === e && r.constructor && (e = r.constructor.name); if ("Map" === e || "Set" === e) return Array.from(r); if ("Arguments" === e || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e)) return g(r, t) }(r)) || t && r && "number" == typeof r.length) { e && (r = e); var n = 0, s = function () { }; return { s: s, n: function () { return n >= r.length ? { done: !0 } : { done: !1, value: r[n++] } }, e: function (r) { throw r }, f: s } } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.") } var u, o = !0, a = !1; return { s: function () { e = e.call(r) }, n: function () { var r = e.next(); return o = r.done, r }, e: function (r) { a = !0, u = r }, f: function () { try { o || null == e.return || e.return() } finally { if (a) throw u } } } } function g(r, t) { (null == t || t > r.length) && (t = r.length); for (var e = 0, n = new Array(t); e < t; e++)n[e] = r[e]; return n } function O(r) { if (!r || 0 === r.length) return ""; var t, e = [], n = S(r); try { for (n.s(); !(t = n.n()).done;){ var s = t.value, u = {}, o = s.value; for (var a in s) "value" !== a && "keyword" !== a && Object.prototype.hasOwnProperty.call(s, a) && (u[a] = s[a]); var i = [z(u)], l = ""; o && (l = vt(o), i.push("=", l)), e.push(i.filter(yr).join(" ")) } } catch (r) { n.e(r) } finally { n.f() } return e.join(", ") } function x(r) { if ("select" === r.type) return _(r); var t = r.map(vt); return "(".concat(t.join("), ("), ")") } function U(r) { if (!r) return ""; var t = ["PARTITION", "("]; if (Array.isArray(r)) t.push(r.map(dr).join(", ")); else { var e = r.value; t.push(e.map(vt).join(", ")) } return t.push(")"), t.filter(yr).join("") } function k(r) { if (!r) return ""; switch (r.type) { case "column": return "(".concat(r.expr.map(z).join(", "), ")") } } function M(r) { var t = r.expr, e = r.keyword, n = t.type, s = [Er(e)]; switch (n) { case "origin": s.push(hr(t)); break; case "update": s.push("UPDATE", ir("SET", O, t.set), ir("WHERE", vt, t.where)) }return s.filter(yr).join(" ") } function D(r) { if (!r) return ""; var t = r.action; return [k(r.target), M(t)].filter(yr).join(" ") } function $(r) { var t = r.table, e = r.type, n = r.prefix, s = void 0 === n ? "into" : n, u = r.columns, o = r.conflict, a = r.values, i = r.where, l = r.on_duplicate_update, c = r.partition, f = r.returning, b = r.set, v = l || {}, L = v.keyword, C = v.set, p = [Er(e), Er(s), B(t), U(c)]; return Array.isArray(u) && p.push("(".concat(u.map(hr).join(", "), ")")), p.push(ir(Array.isArray(a) ? "VALUES" : "", x, a)), p.push(ir("ON CONFLICT", D, o)), p.push(ir("SET", O, b)), p.push(ir("WHERE", vt, i)), p.push(_r(f)), p.push(ir(L, O, C)), p.filter(yr).join(" ") } function P(r) { var t = r.expr, e = r.unit; return ["INTERVAL", vt(t), Er(e)].filter(yr).join(" ") } function G(r) { var t = r.type, e = r.as, n = r.expr, s = r.with_offset; return ["".concat(Er(t), "(").concat(n && vt(n) || "", ")"), ir("AS", dr, e), ir(Er(s && s.keyword), dr, s && s.as)].filter(yr).join(" ") } function F(r) { if (r) switch (r.type) { case "pivot": case "unpivot": return function (r) { var t = r.as, e = r.column, n = r.expr, s = r.in_expr, u = r.type, o = [vt(n), "FOR", z(e), h(s)], a = ["".concat(Er(u), "(").concat(o.join(" "), ")")]; return t && a.push("AS", dr(t)), a.join(" ") }(r); default: return "" } } function j(r) { if (r) { var t = r.keyword, e = r.expr, n = r.index, s = r.index_columns, u = r.parentheses, o = r.prefix, a = []; switch (t.toLowerCase()) { case "forceseek": a.push(Er(t), "(".concat(dr(n)), "(".concat(s.map(vt).filter(yr).join(", "), "))")); break; case "spatial_window_max_cells": a.push(Er(t), "=", vt(e)); break; case "index": a.push(Er(o), Er(t), u ? "(".concat(e.map(dr).join(", "), ")") : "= ".concat(dr(e))); break; default: a.push(vt(e)) }return a.filter(yr).join(" ") } } function H(r) { var t = []; switch (r.keyword) { case "as": t.push("AS", "OF", vt(r.of)); break; case "from_to": t.push("FROM", vt(r.from), "TO", vt(r.to)); break; case "between_and": t.push("BETWEEN", vt(r.between), "AND", vt(r.and)); break; case "contained": t.push("CONTAINED", "IN", vt(r.in)) }return t.filter(yr).join(" ") } function Y(r) { if ("UNNEST" === Er(r.type)) return G(r); var t = r.table, e = r.db, n = r.as, s = r.expr, u = r.operator, o = r.prefix, a = r.schema, i = r.server, l = r.suffix, c = r.tablesample, f = r.temporal_table, b = r.table_hint, v = dr(i), L = dr(e), C = dr(a), p = t && dr(t); if (s) switch (s.type) { case "values": var d = s.parentheses, w = s.values, E = s.prefix, y = [d && "(", "", d && ")"], h = x(w); E && (h = h.split("(").slice(1).map((function (r) { return "".concat(Er(E), "(").concat(r) })).join("")), y[1] = "VALUES ".concat(h), p = y.filter(yr).join(""); break; case "tumble": p = function (r) { if (!r) return ""; var t = r.data, e = r.timecol, n = r.size; return ["TABLE(TUMBLE(TABLE", [dr(t.db), dr(t.table)].filter(yr).join("."), "DESCRIPTOR(".concat(z(e), ")"), "".concat(P(n), "))")].filter(yr).join(" ") }(s); break; default: p = vt(s) }var A = [v, L, C, p = [Er(o), p, Er(l)].filter(yr).join(" ")].filter(yr).join("."); r.parentheses && (A = "(".concat(A, ")")); var m = [A]; if (c) { var T = ["TABLESAMPLE", vt(c.expr), hr(c.repeatable)].filter(yr).join(" "); m.push(T) } return m.push(function (r) { if (r) { var t = r.keyword, e = r.expr; return [Er(t), H(e)].filter(yr).join(" ") } }(f), ir("AS", dr, n), F(u)), b && m.push(Er(b.keyword), "(".concat(b.expr.map(j).filter(yr).join(", "), ")")), m.filter(yr).join(" ") } function B(r) { if (!r) return ""; if (!Array.isArray(r)) { var t = r.expr, e = r.parentheses, n = B(t); return e ? "(".concat(n, ")") : n } var s = r[0], u = []; if ("dual" === s.type) return "DUAL"; u.push(Y(s)); for (var o = 1; o < r.length; ++o){ var a = r[o], i = a.on, l = a.using, c = a.join, f = []; f.push(c ? " ".concat(Er(c)) : ","), f.push(Y(a)), f.push(ir("ON", vt, i)), l && f.push("USING (".concat(l.map(dr).join(", "), ")")), u.push(f.filter(yr).join(" ")) } return u.filter(yr).join("") } function W(r) { var t = r.keyword, e = r.symbol, n = r.value, s = [t.toUpperCase()]; e && s.push(e); var u = n; switch (t) { case "partition by": case "default collate": u = vt(n); break; case "options": u = "(".concat(n.map((function (r) { return [r.keyword, r.symbol, vt(r.value)].join(" ") })).join(", "), ")"); break; case "cluster by": u = n.map(vt).join(", ") }return s.push(u), s.join(" ") } function X(r) { return (X = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (r) { return typeof r } : function (r) { return r && "function" == typeof Symbol && r.constructor === Symbol && r !== Symbol.prototype ? "symbol" : typeof r })(r) } function V(r) { return function (r) { if (Array.isArray(r)) return K(r) }(r) || function (r) { if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r) }(r) || q(r) || function () { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.") }() } function q(r, t) { if (r) { if ("string" == typeof r) return K(r, t); var e = Object.prototype.toString.call(r).slice(8, -1); return "Object" === e && r.constructor && (e = r.constructor.name), "Map" === e || "Set" === e ? Array.from(r) : "Arguments" === e || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e) ? K(r, t) : void 0 } } function K(r, t) { (null == t || t > r.length) && (t = r.length); for (var e = 0, n = new Array(t); e < t; e++)n[e] = r[e]; return n } function Z(r) { if (!r || 0 === r.length) return ""; var t, e = [], n = function (r, t) { var e = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (!e) { if (Array.isArray(r) || (e = q(r)) || t && r && "number" == typeof r.length) { e && (r = e); var n = 0, s = function () { }; return { s: s, n: function () { return n >= r.length ? { done: !0 } : { done: !1, value: r[n++] } }, e: function (r) { throw r }, f: s } } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.") } var u, o = !0, a = !1; return { s: function () { e = e.call(r) }, n: function () { var r = e.next(); return o = r.done, r }, e: function (r) { a = !0, u = r }, f: function () { try { o || null == e.return || e.return() } finally { if (a) throw u } } } }(r); try { for (n.s(); !(t = n.n()).done;){ var s = t.value, u = s.brackets ? "[".concat(hr(s.index), "]") : "".concat(s.notation).concat(hr(s.index)); s.property && (u = "".concat(u, ".").concat(hr(s.property))), e.push(u) } } catch (r) { n.e(r) } finally { n.f() } return e.join("") } function z(r) { var t = r.array_index, e = r.arrows, n = void 0 === e ? [] : e, s = r.as, u = r.collate, o = r.column, a = r.db, i = r.isDual, l = r.notations, c = void 0 === l ? [] : l, f = r.schema, b = r.table, v = r.parentheses, L = r.properties, C = r.suffix, p = r.order_by, d = r.subFields, w = void 0 === d ? [] : d, E = "*" === o ? "*" : function (r, t) { if ("string" == typeof r) return dr(r, t); var e = r.expr, n = r.offset, s = r.suffix, u = n && n.map((function (r) { return ["[", r.name, "".concat(r.name ? "(" : ""), hr(r.value), "".concat(r.name ? ")" : ""), "]"].filter(yr).join("") })).join(""); return [vt(e), u, s].filter(yr).join("") }(o, i), y = [a, f, b].filter(yr).map((function (r) { return "".concat("string" == typeof r ? dr(r) : vt(r)) })), h = y[0]; if (h) { for (var A = 1; A < y.length; ++A)h = "".concat(h).concat(c[A] || ".").concat(y[A]); E = "".concat(h).concat(c[A] || ".").concat(E) } var m = [E = ["".concat(E).concat(Z(t))].concat(V(w)).join("."), ir("AS", vt, s), n.map((function (r, t) { return ir(r, hr, L[t]) })).join(" ")]; u && m.push(wr(u).join(" ")), m.push(Er(C)), m.push(Er(p)); var T = m.filter(yr).join(" "); return v ? "(".concat(T, ")") : T } function Q(r) { var t = r || {}, e = t.dataType, n = t.length, s = t.suffix, u = t.scale, o = t.expr, a = e; return null != n && (a += "(".concat([n, u].filter((function (r) { return null != r })).join(", "), ")")), s && s.length && (a += " ".concat(s.join(" "))), o && (a += vt(o)), a } function J(r) { var t = []; if (!r) return t; var e = r.definition, n = r.keyword, s = r.match, u = r.table, o = r.on_action; return t.push(Er(n)), t.push(B(u)), t.push(e && "(".concat(e.map((function (r) { return vt(r) })).join(", "), ")")), t.push(Er(s)), o.map((function (r) { return t.push(Er(r.type), vt(r.value)) })), t.filter(yr) } function rr(r) { var t = r.column, e = r.collate, n = r.nulls, s = r.opclass, u = r.order_by, o = "string" == typeof t ? { type: "column_ref", table: r.table, column: t } : r; return o.collate = null, [vt(o), ir(e && e.type, dr, e && e.value), s, Er(u), Er(n)].filter(yr).join(" ") } function tr(r) { var t = [], e = z(r.column), n = Q(r.definition); t.push(e), t.push(n); var s = function (r) { var t = [], e = r.nullable, n = r.character_set, s = r.check, u = r.comment, o = r.collate, a = r.storage, i = r.default_val, l = r.auto_increment, c = r.unique, f = r.primary_key, v = r.column_format, L = r.reference_definition; if (t.push(Er(e && e.value)), i) { var C = i.type, p = i.value; t.push(C.toUpperCase(), vt(p)) } var d = vr().database; return t.push(b(s)), t.push(gr(l), Er(f), Er(c), Ir(u)), t.push.apply(t, V(wr(n))), "sqlite" !== d && t.push.apply(t, V(wr(o))), t.push.apply(t, V(wr(v))), t.push.apply(t, V(wr(a))), t.push.apply(t, V(J(L))), t.filter(yr).join(" ") }(r); t.push(s); var u = function (r) { if (r) return [Er(r.value), "(".concat(vt(r.expr), ")"), Er(r.storage_type)].filter(yr).join(" ") }(r.generated); return t.push(u), t.filter(yr).join(" ") } function er(r) { return r ? "object" === X(r) ? ["AS", vt(r)].join(" ") : ["AS", /^(`?)[a-z_][0-9a-z_]*(`?)$/i.test(r) ? dr(r) : pr(r)].join(" ") : "" } function nr(r, t) { var e = r.expr, n = r.type; if ("cast" === n) return d(r); t && (e.isDual = t); var s = vt(e), u = r.expr_list; if (u) { var o = [s], a = u.map((function (r) { return nr(r, t) })).join(", "); return o.push([Er(n), n && "(", a, n && ")"].filter(yr).join("")), o.filter(yr).join(" ") } return e.parentheses && Reflect.has(e, "array_index") && (s = "(".concat(s, ")")), e.array_index && "column_ref" !== e.type && (s = "".concat(s).concat(Z(e.array_index))), [s, er(r.as)].filter(yr).join(" ") } function sr(r, t) { if (!r || "*" === r) return r; var e = function (r) { var t = Array.isArray(r) && r[0]; return !(!t || "dual" !== t.type) }(t); return r.map((function (r) { return nr(r, e) })).join(", ") } function ur(r) { return (ur = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (r) { return typeof r } : function (r) { return r && "function" == typeof Symbol && r.constructor === Symbol && r !== Symbol.prototype ? "symbol" : typeof r })(r) } e.r(n), e.d(n, "arrayStructTypeToSQL", (function () { return Rr })), e.d(n, "autoIncrementToSQL", (function () { return gr })), e.d(n, "columnOrderListToSQL", (function () { return Or })), e.d(n, "commonKeywordArgsToSQL", (function () { return Sr })), e.d(n, "commonOptionConnector", (function () { return ir })), e.d(n, "connector", (function () { return lr })), e.d(n, "commonTypeValue", (function () { return wr })), e.d(n, "commentToSQL", (function () { return Ir })), e.d(n, "createBinaryExpr", (function () { return fr })), e.d(n, "createValueExpr", (function () { return cr })), e.d(n, "dataTypeToSQL", (function () { return Tr })), e.d(n, "DEFAULT_OPT", (function () { return or })), e.d(n, "escape", (function () { return br })), e.d(n, "literalToSQL", (function () { return hr })), e.d(n, "columnIdentifierToSql", (function () { return pr })), e.d(n, "getParserOpt", (function () { return vr })), e.d(n, "identifierToSql", (function () { return dr })), e.d(n, "onPartitionsToSQL", (function () { return mr })), e.d(n, "replaceParams", (function () { return Ar })), e.d(n, "returningToSQL", (function () { return _r })), e.d(n, "hasVal", (function () { return yr })), e.d(n, "setParserOpt", (function () { return Lr })), e.d(n, "toUpper", (function () { return Er })), e.d(n, "topToSQL", (function () { return Cr })), e.d(n, "triggerEventToSQL", (function () { return Nr })); var or = { database: "mysql", type: "table", trimQuery: !0, parseOptions: { includeLocations: !1 } }, ar = or; function ir(r, t, e) { if (e) return r ? "".concat(r.toUpperCase(), " ").concat(t(e)) : t(e) } function lr(r, t) { if (t) return "".concat(r.toUpperCase(), " ").concat(t) } function cr(r) { var t = ur(r); if (Array.isArray(r)) return { type: "expr_list", value: r.map(cr) }; if (null === r) return { type: "null", value: null }; switch (t) { case "boolean": return { type: "bool", value: r }; case "string": return { type: "string", value: r }; case "number": return { type: "number", value: r }; default: throw new Error('Cannot convert value "'.concat(t, '" to SQL')) } } function fr(r, t, e) { var n = { operator: r, type: "binary_expr" }; return n.left = t.type ? t : cr(t), "BETWEEN" === r || "NOT BETWEEN" === r ? (n.right = { type: "expr_list", value: [cr(e[0]), cr(e[1])] }, n) : (n.right = e.type ? e : cr(e), n) } function br(r) { return r } function vr() { return ar } function Lr(r) { ar = r } function Cr(r) { if (r) { var t = r.value, e = r.percent, n = r.parentheses ? "(".concat(t, ")") : t, s = "TOP ".concat(n); return e ? "".concat(s, " ").concat(e.toUpperCase()) : s } } function pr(r) { var t = vr().database; if (r) switch (t && t.toLowerCase()) { case "db2": case "postgresql": case "redshift": case "snowflake": case "noql": case "trino": return '"'.concat(r, '"'); case "transactsql": return "[".concat(r, "]"); case "mysql": case "mariadb": case "bigquery": default: return "`".concat(r, "`") } } function dr(r, t) { var e = vr().database; if (!0 === t) return "'".concat(r, "'"); if (r) { if ("*" === r) return r; switch (e && e.toLowerCase()) { case "mysql": case "mariadb": case "sqlite": return "`".concat(r, "`"); case "postgresql": case "redshift": case "snowflake": case "trino": case "noql": return '"'.concat(r, '"'); case "transactsql": return "[".concat(r, "]"); case "bigquery": case "db2": return r; default: return "`".concat(r, "`") } } } function wr(r) { var t = []; if (!r) return t; var e = r.type, n = r.symbol, s = r.value; return t.push(e.toUpperCase()), n && t.push(n), t.push(s.toUpperCase()), t } function Er(r) { if (r) return r.toUpperCase() } function yr(r) { return r } function hr(r) { if (r) { var t = r.prefix, e = r.type, n = r.parentheses, s = r.suffix, u = r.value, o = "string" == typeof r ? r : u; switch (e) { case "backticks_quote_string": o = "`".concat(u, "`"); break; case "string": o = "'".concat(u, "'"); break; case "regex_string": o = 'r"'.concat(u, '"'); break; case "hex_string": o = "X'".concat(u, "'"); break; case "full_hex_string": o = "0x".concat(u); break; case "natural_string": o = "N'".concat(u, "'"); break; case "bit_string": o = "b'".concat(u, "'"); break; case "double_quote_string": o = '"'.concat(u, '"'); break; case "single_quote_string": o = "'".concat(u, "'"); break; case "boolean": case "bool": o = u ? "TRUE" : "FALSE"; break; case "null": o = "NULL"; break; case "star": o = "*"; break; case "param": o = "".concat(t || ":").concat(u), t = null; break; case "origin": o = u.toUpperCase(); break; case "date": case "datetime": case "time": case "timestamp": o = "".concat(e.toUpperCase(), " '").concat(u, "'"); break; case "var_string": o = "N'".concat(u, "'") }var a = []; return t && a.push(Er(t)), a.push(o), s && a.push("object" === ur(s) && s.collate ? wr(s.collate).join(" ") : Er(s)), o = a.join(" "), n ? "(".concat(o, ")") : o } } function Ar(r, t) { return function r(t, e) { return Object.keys(t).filter((function (r) { var e = t[r]; return Array.isArray(e) || "object" === ur(e) && null !== e })).forEach((function (n) { var s = t[n]; if ("object" !== ur(s) || "param" !== s.type) return r(s, e); if (void 0 === e[s.value]) throw new Error("no value for parameter :".concat(s.value, " found")); return t[n] = cr(e[s.value]), null })), t }(JSON.parse(JSON.stringify(r)), t) } function mr(r) { var t = r.type, e = r.partitions; return [Er(t), "(".concat(e.map((function (r) { if ("range" !== r.type) return hr(r); var t = r.start, e = r.end, n = r.symbol; return "".concat(hr(t), " ").concat(Er(n), " ").concat(hr(e)) })).join(", "), ")")].join(" ") } function Tr(r) { var t = r.dataType, e = r.length, n = r.parentheses, s = r.scale, u = r.suffix, o = ""; return null != e && (o = s ? "".concat(e, ", ").concat(s) : e), n && (o = "(".concat(o, ")")), u && u.length && (o += " ".concat(u.join(" "))), "".concat(t).concat(o) } function Rr(r) { if (r) { var t = r.dataType, e = r.definition, n = r.anglebracket, s = Er(t); if ("ARRAY" !== s && "STRUCT" !== s) return s; var u = e && e.map((function (r) { return [r.field_name, Rr(r.field_type)].filter(yr).join(" ") })).join(", "); return n ? "".concat(s, "<").concat(u, ">") : "".concat(s, " ").concat(u) } } function Ir(r) { if (r) { var t = [], e = r.keyword, n = r.symbol, s = r.value; return t.push(e.toUpperCase()), n && t.push(n), t.push(hr(s)), t.join(" ") } } function Nr(r) { return r.map((function (r) { var t = r.keyword, e = r.args, n = [Er(t)]; if (e) { var s = e.keyword, u = e.columns; n.push(Er(s), u.map(z).join(", ")) } return n.join(" ") })).join(" OR ") } function _r(r) { return r ? ["RETURNING", r.columns.map(nr).filter(yr).join(", ")].join(" ") : "" } function Sr(r) { return r ? [Er(r.keyword), Er(r.args)] : [] } function gr(r) { if (r) { if ("string" == typeof r) { var t = vr().database; switch (t && t.toLowerCase()) { case "sqlite": return "AUTOINCREMENT"; default: return "AUTO_INCREMENT" } } var e = r.keyword, n = r.seed, s = r.increment, u = r.parentheses, o = Er(e); return u && (o += "(".concat(hr(n), ", ").concat(hr(s), ")")), o } } function Or(r) { if (r) return r.map(rr).filter(yr).join(", ") } function xr(r) { var t = r.name, e = r.value; return ["@".concat(t), "=", vt(e)].filter(yr).join(" ") } function Ur(r) { var t = r.left, e = r.right, n = r.symbol, s = r.keyword; return t.keyword = s, [vt(t), n, vt(e)].filter(yr).join(" ") } function kr(r) { var t, e, n, s, u = r.keyword, o = r.suffix, a = ""; switch (Er(u)) { case "BINLOG": e = (t = r).in, n = t.from, s = t.limit, a = [ir("IN", hr, e && e.right), ir("FROM", B, n), R(s)].filter(yr).join(" "); break; case "CHARACTER": case "COLLATION": a = function (r) { var t = r.expr; if (t) return "LIKE" === Er(t.op) ? ir("LIKE", hr, t.right) : ir("WHERE", vt, t) }(r); break; case "COLUMNS": case "INDEXES": case "INDEX": a = ir("FROM", B, r.from); break; case "GRANTS": a = function (r) { var t = r.for; if (t) { var e = t.user, n = t.host, s = t.role_list, u = "'".concat(e, "'"); return n && (u += "@'".concat(n, "'")), ["FOR", u, s && "USING", s && s.map((function (r) { return "'".concat(r, "'") })).join(", ")].filter(yr).join(" ") } }(r); break; case "CREATE": a = ir("", Y, r[o]); break; case "VAR": a = bt(r.var), u = "" }return ["SHOW", Er(u), Er(o), a].filter(yr).join(" ") } var Mr = { alter: function (r) { var t = r.keyword; switch (void 0 === t ? "table" : t) { case "aggregate": return function (r) { var t = r.args, e = r.expr, n = r.keyword, s = r.name, u = r.type, o = t.expr, a = t.orderby; return [Er(u), Er(n), [[dr(s.schema), dr(s.name)].filter(yr).join("."), "(".concat(o.map(ot).join(", ")).concat(a ? [" ORDER", "BY", a.map(ot).join(", ")].join(" ") : "", ")")].filter(yr).join(""), ut(e)].filter(yr).join(" ") }(r); case "table": return function (r) { var t = r.type, e = r.table, n = r.expr, s = void 0 === n ? [] : n, u = Er(t), o = B(e), a = s.map(vt); return [u, "TABLE", o, a.join(", ")].filter(yr).join(" ") }(r); case "schema": return function (r) { var t = r.expr, e = r.keyword, n = r.schema; return [Er(r.type), Er(e), dr(n), ut(t)].filter(yr).join(" ") }(r); case "domain": case "type": return function (r) { var t = r.expr, e = r.keyword, n = r.name; return [Er(r.type), Er(e), [dr(n.schema), dr(n.name)].filter(yr).join("."), ut(t)].filter(yr).join(" ") }(r); case "function": return function (r) { var t = r.args, e = r.expr, n = r.keyword, s = r.name; return [Er(r.type), Er(n), [[dr(s.schema), dr(s.name)].filter(yr).join("."), t && "(".concat(t.expr ? t.expr.map(ot).join(", ") : "", ")")].filter(yr).join(""), ut(e)].filter(yr).join(" ") }(r); case "view": return function (r) { var t = r.type, e = r.columns, n = r.attributes, s = r.select, u = r.view, o = r.with, a = Er(t), i = Y(u), l = [a, "VIEW", i]; e && l.push("(".concat(e.map(z).join(", "), ")")); n && l.push("WITH ".concat(n.map(Er).join(", "))); l.push("AS", _(s)), o && l.push(Er(o)); return l.filter(yr).join(" ") }(r) } }, analyze: function (r) { var t = r.type, e = r.table; return [Er(t), Y(e)].join(" ") }, attach: function (r) { var t = r.type, e = r.database, n = r.expr, s = r.as, u = r.schema; return [Er(t), Er(e), vt(n), Er(s), dr(u)].filter(yr).join(" ") }, create: function (r) { var t = r.keyword, e = ""; switch (t.toLowerCase()) { case "aggregate": e = function (r) { var t = r.type, e = r.replace, n = r.keyword, s = r.name, u = r.args, o = r.options, a = [Er(t), Er(e), Er(n)], i = [dr(s.schema), s.name].filter(yr).join("."), l = "".concat(u.expr.map(ot).join(", ")).concat(u.orderby ? [" ORDER", "BY", u.orderby.map(ot).join(", ")].join(" ") : ""); return a.push("".concat(i, "(").concat(l, ")"), "(".concat(o.map(st).join(", "), ")")), a.filter(yr).join(" ") }(r); break; case "table": e = function (r) { var t = r.type, e = r.keyword, n = r.table, s = r.like, u = r.as, o = r.temporary, a = r.if_not_exists, i = r.create_definitions, l = r.table_options, c = r.ignore_replace, f = r.or_replace, b = r.partition_of, v = r.query_expr, L = [Er(t), Er(f), Er(o), Er(e), Er(a), B(n)]; if (s) { var C = s.type, p = B(s.table); return L.push(Er(C), p), L.filter(yr).join(" ") } if (b) return L.concat([tt(b)]).filter(yr).join(" "); i && L.push("(".concat(i.map(Jr).join(", "), ")")); l && L.push(l.map(W).join(" ")); L.push(Er(c), Er(u)), v && L.push(Dr(v)); return L.filter(yr).join(" ") }(r); break; case "trigger": e = "constraint" === r.resource ? function (r) { var t = r.constraint, e = r.constraint_kw, n = r.deferrable, s = r.events, u = r.execute, o = r.for_each, a = r.from, i = r.location, l = r.keyword, c = r.or, f = r.type, b = r.table, v = r.when, L = [Er(f), Er(c), Er(e), Er(l), dr(t), Er(i)], C = Nr(s); L.push(C, "ON", Y(b)), a && L.push("FROM", Y(a)); L.push.apply(L, Zr(Sr(n)).concat(Zr(Sr(o)))), v && L.push(Er(v.type), vt(v.cond)); return L.push(Er(u.keyword), w(u.expr)), L.filter(yr).join(" ") }(r) : function (r) { var t = r.definer, e = r.for_each, n = r.keyword, s = r.execute, u = r.type, o = r.table, a = r.if_not_exists, i = r.temporary, l = r.trigger, c = r.events, f = r.order, b = r.time, v = r.when, L = [Er(u), Er(i), t, Er(n), Er(a), Y(l), Er(b), c.map((function (r) { var t = [Er(r.keyword)], e = r.args; return e && t.push(Er(e.keyword), e.columns.map(z).join(", ")), t.join(" ") })), "ON", Y(o), Er(e && e.keyword), Er(e && e.args), f && "".concat(Er(f.keyword), " ").concat(dr(f.trigger)), ir("WHEN", vt, v), Er(s.prefix)]; switch (s.type) { case "set": L.push(ir("SET", O, s.expr)); break; case "multiple": L.push($r(s.expr.ast)) }return L.push(Er(s.suffix)), L.filter(yr).join(" ") }(r); break; case "extension": e = function (r) { var t = r.extension, e = r.from, n = r.if_not_exists, s = r.keyword, u = r.schema, o = r.type, a = r.with, i = r.version; return [Er(o), Er(s), Er(n), hr(t), Er(a), ir("SCHEMA", hr, u), ir("VERSION", hr, i), ir("FROM", hr, e)].filter(yr).join(" ") }(r); break; case "function": e = function (r) { var t = r.type, e = r.replace, n = r.keyword, s = r.name, u = r.args, o = r.returns, a = r.options, i = r.last, l = [Er(t), Er(e), Er(n)], c = [dr(s.schema), s.name].filter(yr).join("."), f = u.map(ot).filter(yr).join(", "); return l.push("".concat(c, "(").concat(f, ")"), function (r) { var t = r.type, e = r.keyword, n = r.expr; return [Er(t), Er(e), Array.isArray(n) ? "(".concat(n.map(tr).join(", "), ")") : et(n)].filter(yr).join(" ") }(o), a.map(nt).join(" "), i), l.filter(yr).join(" ") }(r); break; case "index": e = function (r) { var t = r.concurrently, e = r.filestream_on, n = r.keyword, s = r.include, u = r.index_columns, a = r.index_type, l = r.index_using, c = r.index, f = r.on, b = r.index_options, v = r.algorithm_option, L = r.lock_option, C = r.on_kw, p = r.table, d = r.tablespace, w = r.type, E = r.where, y = r.with, h = r.with_before_where, A = y && "WITH (".concat(i(y).join(", "), ")"), m = s && "".concat(Er(s.keyword), " (").concat(s.columns.map((function (r) { return dr(r) })).join(", "), ")"), T = [Er(w), Er(a), Er(n), Er(t), dr(c), Er(C), Y(p)].concat(Zr(o(l)), ["(".concat(Or(u), ")"), m, i(b).join(" "), ut(v), ut(L), ir("TABLESPACE", hr, d)]); h ? T.push(A, ir("WHERE", vt, E)) : T.push(ir("WHERE", vt, E), A); return T.push(ir("ON", vt, f), ir("FILESTREAM_ON", hr, e)), T.filter(yr).join(" ") }(r); break; case "sequence": e = function (r) { var t = r.type, e = r.keyword, n = r.sequence, s = r.temporary, u = r.if_not_exists, o = r.create_definitions, a = [Er(t), Er(s), Er(e), Er(u), B(n)]; o && a.push(o.map(Jr).join(" ")); return a.filter(yr).join(" ") }(r); break; case "database": e = function (r) { var t = r.type, e = r.keyword, n = r.database, s = r.if_not_exists, u = r.create_definitions, o = [Er(t), Er(e), Er(s), pr(n)]; u && o.push(u.map(W).join(" ")); return o.filter(yr).join(" ") }(r); break; case "view": e = function (r) { var t = r.algorithm, e = r.columns, n = r.definer, s = r.if_not_exists, u = r.keyword, o = r.recursive, a = r.replace, i = r.select, l = r.sql_security, c = r.temporary, f = r.type, b = r.view, v = r.with, L = r.with_options, C = b.db, p = b.view, d = [dr(C), dr(p)].filter(yr).join("."); return [Er(f), Er(a), Er(c), Er(o), t && "ALGORITHM = ".concat(Er(t)), n, l && "SQL SECURITY ".concat(Er(l)), Er(u), Er(s), d, e && "(".concat(e.map(pr).join(", "), ")"), L && ["WITH", "(".concat(L.map((function (r) { return wr(r).join(" ") })).join(", "), ")")].join(" "), "AS", Dr(i), Er(v)].filter(yr).join(" ") }(r); break; case "domain": e = function (r) { var t = r.as, e = r.domain, n = r.type, s = r.keyword, u = r.target, o = r.create_definitions, a = [Er(n), Er(s), [dr(e.schema), dr(e.name)].filter(yr).join("."), Er(t), Tr(u)]; if (o && o.length > 0) { var i, l = [], c = function (r, t) { var e = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (!e) { if (Array.isArray(r) || (e = zr(r)) || t && r && "number" == typeof r.length) { e && (r = e); var n = 0, s = function () { }; return { s: s, n: function () { return n >= r.length ? { done: !0 } : { done: !1, value: r[n++] } }, e: function (r) { throw r }, f: s } } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.") } var u, o = !0, a = !1; return { s: function () { e = e.call(r) }, n: function () { var r = e.next(); return o = r.done, r }, e: function (r) { a = !0, u = r }, f: function () { try { o || null == e.return || e.return() } finally { if (a) throw u } } } }(o); try { for (c.s(); !(i = c.n()).done;){ var f = i.value, v = f.type; switch (v) { case "collate": l.push(wr(f).join(" ")); break; case "default": l.push(Er(v), vt(f.value)); break; case "constraint": l.push(b(f)) } } } catch (r) { c.e(r) } finally { c.f() } a.push(l.filter(yr).join(" ")) } return a.filter(yr).join(" ") }(r); break; case "type": e = function (r) { var t = r.as, e = r.create_definitions, n = r.keyword, s = r.name, u = r.resource, o = [Er(r.type), Er(n), [dr(s.schema), dr(s.name)].filter(yr).join("."), Er(t), Er(u)]; if (e) { var a = []; switch (u) { case "enum": a.push(vt(e)) }o.push(a.filter(yr).join(" ")) } return o.filter(yr).join(" ") }(r); break; case "user": e = function (r) { var t = r.attribute, e = r.comment, n = r.default_role, s = r.if_not_exists, u = r.keyword, o = r.lock_option, a = r.password_options, i = r.require, l = r.resource_options, c = r.type, f = r.user.map((function (r) { var t = r.user, e = r.auth_option, n = [qr(t)]; return e && n.push(Er(e.keyword), e.auth_plugin, hr(e.value)), n.filter(yr).join(" ") })).join(", "), b = [Er(c), Er(u), Er(s), f]; n && b.push(Er(n.keyword), n.value.map(qr).join(", ")); b.push(ir(i && i.keyword, vt, i && i.value)), l && b.push(Er(l.keyword), l.value.map((function (r) { return vt(r) })).join(" ")); a && a.forEach((function (r) { return b.push(ir(r.keyword, vt, r.value)) })); return b.push(hr(o), Ir(e), hr(t)), b.filter(yr).join(" ") }(r); break; default: throw new Error("unknown create resource ".concat(t)) }return e }, select: _, deallocate: function (r) { var t = r.type, e = r.keyword, n = r.expr; return [Er(t), Er(e), vt(n)].filter(yr).join(" ") }, delete: function (r) { var t = r.columns, e = r.from, n = r.table, s = r.where, u = r.orderby, o = r.with, a = r.limit, i = [I(o), "DELETE"], l = sr(t, e); return i.push(l), Array.isArray(n) && (1 === n.length && !0 === n[0].addition || i.push(B(n))), i.push(ir("FROM", B, e)), i.push(ir("WHERE", vt, s)), i.push(Ct(u, "order by")), i.push(R(a)), i.filter(yr).join(" ") }, exec: function (r) { var t = r.keyword, e = r.module, n = r.parameters; return [Er(t), Y(e), (n || []).map(xr).filter(yr).join(", ")].filter(yr).join(" ") }, execute: function (r) { var t = r.type, e = r.name, n = r.args, s = [Er(t)], u = [e]; n && u.push("(".concat(vt(n).join(", "), ")")); return s.push(u.join("")), s.filter(yr).join(" ") }, for: function (r) { var t = r.type, e = r.label, n = r.target, s = r.query, u = r.stmts; return [e, Er(t), n, "IN", $r([s]), "LOOP", $r(u), "END LOOP", e].filter(yr).join(" ") }, update: function (r) { var t = r.from, e = r.table, n = r.set, s = r.where, u = r.orderby, o = r.with, a = r.limit, i = r.returning; return [I(o), "UPDATE", B(e), ir("SET", O, n), ir("FROM", B, t), ir("WHERE", vt, s), Ct(u, "order by"), R(a), _r(i)].filter(yr).join(" ") }, if: function (r) { var t = r.boolean_expr, e = r.else_expr, n = r.elseif_expr, s = r.if_expr, u = r.prefix, o = r.go, a = r.semicolons, i = r.suffix, l = [Er(r.type), vt(t), hr(u), "".concat(jr(s.ast || s)).concat(a[0]), Er(o)]; n && l.push(n.map((function (r) { return [Er(r.type), vt(r.boolean_expr), "THEN", jr(r.then.ast || r.then), r.semicolon].filter(yr).join(" ") })).join(" ")); e && l.push("ELSE", "".concat(jr(e.ast || e)).concat(a[1])); return l.push(hr(i)), l.filter(yr).join(" ") }, insert: $, drop: Xr, truncate: Xr, replace: $, declare: function (r) { var t = r.type, e = r.declare, n = r.symbol, s = [Er(t)], u = e.map((function (r) { var t = r.at, e = r.name, n = r.as, s = r.constant, u = r.datatype, o = r.not_null, a = r.prefix, i = r.definition, l = r.keyword, c = [[t, e].filter(yr).join(""), Er(n), Er(s)]; switch (l) { case "variable": c.push.apply(c, [Q(u)].concat(Yr(wr(r.collate)), [Er(o)])), i && c.push(Er(i.keyword), vt(i.value)); break; case "cursor": c.push(Er(a)); break; case "table": c.push(Er(a), "(".concat(i.map(Jr).join(", "), ")")) }return c.filter(yr).join(" ") })).join("".concat(n, " ")); return s.push(u), s.join(" ") }, use: function (r) { var t = r.type, e = r.db, n = Er(t), s = dr(e); return "".concat(n, " ").concat(s) }, rename: function (r) { var t = r.type, e = r.table, n = [], s = "".concat(t && t.toUpperCase(), " TABLE"); if (e) { var u, o = Hr(e); try { for (o.s(); !(u = o.n()).done;){ var a = u.value.map(Y); n.push(a.join(" TO ")) } } catch (r) { o.e(r) } finally { o.f() } } return "".concat(s, " ").concat(n.join(", ")) }, call: function (r) { var t = vt(r.expr); return "".concat("CALL", " ").concat(t) }, desc: function (r) { var t = r.type, e = r.table, n = Er(t); return "".concat(n, " ").concat(dr(e)) }, set: function (r) { var t = r.expr, e = vt(t); return "".concat("SET", " ").concat(e) }, lock: Vr, unlock: Vr, show: kr, grant: Kr, revoke: Kr, proc: function (r) { var t = r.stmt; switch (t.type) { case "assign": return Ur(t); case "return": return function (r) { var t = r.type, e = r.expr; return [Er(t), vt(e)].join(" ") }(t) } }, raise: function (r) { var t = r.type, e = r.level, n = r.raise, s = r.using, u = [Er(t), Er(e)]; n && u.push([hr(n.keyword), "format" === n.type && n.expr.length > 0 && ","].filter(yr).join(""), n.expr.map((function (r) { return vt(r) })).join(", ")); s && u.push(Er(s.type), Er(s.option), s.symbol, s.expr.map((function (r) { return vt(r) })).join(", ")); return u.filter(yr).join(" ") }, transaction: function (r) { return vt(r.expr) } }; function Dr(r) { if (!r) return ""; for (var t = Mr[r.type], e = r, n = e._parentheses, s = e._orderby, u = e._limit, o = [n && "(", t(r)]; r._next;){ var a = Mr[r._next.type], i = Er(r.set_op); o.push(i, a(r._next)), r = r._next } return o.push(n && ")", Ct(s, "order by"), R(u)), o.filter(yr).join(" ") } function $r(r) { for (var t = [], e = 0, n = r.length; e < n; ++e){ var s = r[e] && r[e].ast ? r[e].ast : r[e], u = Dr(s); e === n - 1 && "transaction" === s.type && (u = "".concat(u, " ;")), t.push(u) } return t.join(" ; ") } var Pr = ["analyze", "attach", "select", "deallocate", "delete", "exec", "update", "insert", "drop", "rename", "truncate", "call", "desc", "use", "alter", "set", "create", "lock", "unlock", "declare", "show", "replace", "if", "grant", "revoke", "proc", "raise", "execute", "transaction"]; function Gr(r) { var t = r && r.ast ? r.ast : r; if (!Pr.includes(t.type)) throw new Error("".concat(t.type, " statements not supported at the moment")) } function Fr(r) { return Array.isArray(r) ? (r.forEach(Gr), $r(r)) : (Gr(r), Dr(r)) } function jr(r) { return "go" === r.go ? function r(t) { if (!t || 0 === t.length) return ""; var e = [Fr(t.ast)]; return t.go_next && e.push(t.go.toUpperCase(), r(t.go_next)), e.filter((function (r) { return r })).join(" ") }(r) : Fr(r) } function Hr(r, t) { var e = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (!e) { if (Array.isArray(r) || (e = Br(r)) || t && r && "number" == typeof r.length) { e && (r = e); var n = 0, s = function () { }; return { s: s, n: function () { return n >= r.length ? { done: !0 } : { done: !1, value: r[n++] } }, e: function (r) { throw r }, f: s } } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.") } var u, o = !0, a = !1; return { s: function () { e = e.call(r) }, n: function () { var r = e.next(); return o = r.done, r }, e: function (r) { a = !0, u = r }, f: function () { try { o || null == e.return || e.return() } finally { if (a) throw u } } } } function Yr(r) { return function (r) { if (Array.isArray(r)) return Wr(r) }(r) || function (r) { if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r) }(r) || Br(r) || function () { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.") }() } function Br(r, t) { if (r) { if ("string" == typeof r) return Wr(r, t); var e = Object.prototype.toString.call(r).slice(8, -1); return "Object" === e && r.constructor && (e = r.constructor.name), "Map" === e || "Set" === e ? Array.from(r) : "Arguments" === e || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e) ? Wr(r, t) : void 0 } } function Wr(r, t) { (null == t || t > r.length) && (t = r.length); for (var e = 0, n = new Array(t); e < t; e++)n[e] = r[e]; return n } function Xr(r) { var t = r.type, e = r.keyword, n = r.name, s = r.prefix, u = r.suffix, o = [Er(t), Er(e), Er(s)]; switch (e) { case "table": o.push(B(n)); break; case "trigger": o.push([n[0].schema ? "".concat(dr(n[0].schema), ".") : "", dr(n[0].trigger)].filter(yr).join("")); break; case "database": case "schema": case "procedure": o.push(dr(n)); break; case "view": o.push(B(n), r.options && r.options.map(vt).filter(yr).join(" ")); break; case "index": o.push.apply(o, [z(n)].concat(Yr(r.table ? ["ON", Y(r.table)] : []), [r.options && r.options.map(vt).filter(yr).join(" ")])) }return u && o.push(u.map(vt).filter(yr).join(" ")), o.filter(yr).join(" ") } function Vr(r) { var t = r.type, e = r.keyword, n = r.tables, s = [t.toUpperCase(), Er(e)]; if ("UNLOCK" === t.toUpperCase()) return s.join(" "); var u, o = [], a = Hr(n); try { var i = function () { var r = u.value, t = r.table, e = r.lock_type, n = [Y(t)]; if (e) { n.push(["prefix", "type", "suffix"].map((function (r) { return Er(e[r]) })).filter(yr).join(" ")) } o.push(n.join(" ")) }; for (a.s(); !(u = a.n()).done;)i() } catch (r) { a.e(r) } finally { a.f() } return s.push.apply(s, [o.join(", ")].concat(Yr(function (r) { var t = r.lock_mode, e = r.nowait, n = []; if (t) { var s = t.mode; n.push(s.toUpperCase()) } return e && n.push(e.toUpperCase()), n }(r)))), s.filter(yr).join(" ") } function qr(r) { var t = r.name, e = r.host, n = [hr(t)]; return e && n.push("@", hr(e)), n.join("") } function Kr(r) { var t = r.type, e = r.grant_option_for, n = r.keyword, s = r.objects, u = r.on, o = r.to_from, a = r.user_or_roles, i = r.with, l = [Er(t), hr(e)], c = s.map((function (r) { var t = r.priv, e = r.columns, n = [vt(t)]; return e && n.push("(".concat(e.map(z).join(", "), ")")), n.join(" ") })).join(", "); if (l.push(c), u) switch (l.push("ON"), n) { case "priv": l.push(hr(u.object_type), u.priv_level.map((function (r) { return [dr(r.prefix), dr(r.name)].filter(yr).join(".") })).join(", ")); break; case "proxy": l.push(qr(u)) }return l.push(Er(o), a.map(qr).join(", ")), l.push(hr(i)), l.filter(yr).join(" ") } function Zr(r) { return function (r) { if (Array.isArray(r)) return Qr(r) }(r) || function (r) { if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r) }(r) || zr(r) || function () { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.") }() } function zr(r, t) { if (r) { if ("string" == typeof r) return Qr(r, t); var e = Object.prototype.toString.call(r).slice(8, -1); return "Object" === e && r.constructor && (e = r.constructor.name), "Map" === e || "Set" === e ? Array.from(r) : "Arguments" === e || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e) ? Qr(r, t) : void 0 } } function Qr(r, t) { (null == t || t > r.length) && (t = r.length); for (var e = 0, n = new Array(t); e < t; e++)n[e] = r[e]; return n } function Jr(r) { if (!r) return []; var t, e, n, u, o = r.resource; switch (o) { case "column": return tr(r); case "index": return e = [], n = (t = r).keyword, u = t.index, e.push(Er(n)), e.push(u), e.push.apply(e, s(l(t))), e.filter(yr).join(" "); case "constraint": return b(r); case "sequence": return [Er(r.prefix), vt(r.value)].filter(yr).join(" "); default: throw new Error("unknown resource = ".concat(o, " type")) } } function rt(r) { var t = []; switch (r.keyword) { case "from": t.push("FROM", "(".concat(hr(r.from), ")"), "TO", "(".concat(hr(r.to), ")")); break; case "in": t.push("IN", "(".concat(vt(r.in), ")")); break; case "with": t.push("WITH", "(MODULUS ".concat(hr(r.modulus), ", REMAINDER ").concat(hr(r.remainder), ")")) }return t.filter(yr).join(" ") } function tt(r) { var t = r.keyword, e = r.table, n = r.for_values, s = r.tablespace, u = [Er(t), Y(e), Er(n.keyword), rt(n.expr)]; return s && u.push("TABLESPACE", hr(s)), u.filter(yr).join(" ") } function et(r) { return r.dataType ? Tr(r) : [dr(r.db), dr(r.schema), dr(r.table)].filter(yr).join(".") } function nt(r) { var t = r.type; switch (t) { case "as": return [Er(t), r.symbol, Dr(r.declare), Er(r.begin), $r(r.expr), Er(r.end), r.symbol].filter(yr).join(" "); case "set": return [Er(t), r.parameter, Er(r.value && r.value.prefix), r.value && r.value.expr.map(vt).join(", ")].filter(yr).join(" "); default: return vt(r) } } function st(r) { var t = r.type, e = r.symbol, n = r.value, s = [Er(t), e]; switch (Er(t)) { case "SFUNC": s.push([dr(n.schema), n.name].filter(yr).join(".")); break; case "STYPE": case "MSTYPE": s.push(Tr(n)); break; default: s.push(vt(n)) }return s.filter(yr).join(" ") } function ut(r) { if (!r) return ""; var t = r.action, e = r.create_definitions, n = r.if_not_exists, s = r.keyword, u = r.old_column, o = r.prefix, a = r.resource, i = r.symbol, c = r.suffix, f = "", b = []; switch (a) { case "column": b = [tr(r)]; break; case "index": b = l(r), f = r[a]; break; case "table": case "schema": f = dr(r[a]); break; case "aggregate": case "function": case "domain": case "type": f = dr(r[a]); break; case "algorithm": case "lock": case "table-option": f = [i, Er(r[a])].filter(yr).join(" "); break; case "constraint": f = dr(r[a]), b = [Jr(e)]; break; case "key": f = dr(r[a]); break; default: f = [i, r[a]].filter((function (r) { return null !== r })).join(" ") }return [Er(t), Er(s), Er(n), u && z(u), Er(o), f && f.trim(), b.filter(yr).join(" "), c && "".concat(Er(c.keyword), " ").concat(z(c.expr))].filter(yr).join(" ") } function ot(r) { var t = r.default && [Er(r.default.keyword), vt(r.default.value)].join(" "); return [Er(r.mode), r.name, Tr(r.type), t].filter(yr).join(" ") } function at(r) { return (at = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (r) { return typeof r } : function (r) { return r && "function" == typeof Symbol && r.constructor === Symbol && r !== Symbol.prototype ? "symbol" : typeof r })(r) } function it(r) { var t = r.expr_list; switch (Er(r.type)) { case "STRUCT": return "(".concat(sr(t), ")"); case "ARRAY": return function (r) { var t = r.array_path, e = r.brackets, n = r.expr_list, s = r.parentheses; if (!n) return "[".concat(sr(t), "]"); var u = Array.isArray(n) ? n.map((function (r) { return "(".concat(sr(r), ")") })).filter(yr).join(", ") : vt(n); return e ? "[".concat(u, "]") : s ? "(".concat(u, ")") : u }(r); default: return "" } } function lt(r) { var t = r.definition, e = [Er(r.keyword)]; return t && "object" === at(t) && (e.length = 0, e.push(Rr(t))), e.push(it(r)), e.filter(yr).join("") } function ct(r) { return (ct = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (r) { return typeof r } : function (r) { return r && "function" == typeof Symbol && r.constructor === Symbol && r !== Symbol.prototype ? "symbol" : typeof r })(r) } var ft = { alter: ut, aggr_func: function (r) { var t = r.args, e = r.filter, n = r.over, s = r.within_group_orderby, u = vt(t.expr), o = r.name, a = p(n); t.distinct && (u = ["DISTINCT", u].join(" ")), t.orderby && (u = "".concat(u, " ").concat(Ct(t.orderby, "order by"))), t.separator && (u = [u, Er(t.separator.keyword), hr(t.separator.value)].filter(yr).join(" ")); var i = s ? "WITHIN GROUP (".concat(Ct(s, "order by"), ")") : "", l = e ? "FILTER (WHERE ".concat(vt(e.where), ")") : ""; return ["".concat(o, "(").concat(u, ")"), i, a, l].filter(yr).join(" ") }, any_value: function (r) { var t = r.args, e = r.type, n = r.over, s = t.expr, u = t.having, o = "".concat(Er(e), "(").concat(vt(s)); return u && (o = "".concat(o, " HAVING ").concat(Er(u.prefix), " ").concat(vt(u.expr))), [o = "".concat(o, ")"), p(n)].filter(yr).join(" ") }, window_func: function (r) { var t = r.over; return [C(r), p(t)].filter(yr).join(" ") }, array: lt, assign: Ur, binary_expr: h, case: function (r) { var t = ["CASE"], e = r.args, n = r.expr, s = r.parentheses; n && t.push(vt(n)); for (var u = 0, o = e.length; u < o; ++u)t.push(e[u].type.toUpperCase()), e[u].cond && (t.push(vt(e[u].cond)), t.push("THEN")), t.push(vt(e[u].result)); return t.push("END"), s ? "(".concat(t.join(" "), ")") : t.join(" ") }, cast: d, column_ref: z, column_definition: tr, datatype: Tr, extract: function (r) { var t = r.args, e = r.type, n = t.field, s = t.cast_type, u = t.source, o = ["".concat(Er(e), "(").concat(Er(n)), "FROM", Er(s), vt(u)]; return "".concat(o.filter(yr).join(" "), ")") }, flatten: function (r) { var t = r.args, e = r.type, n = ["input", "path", "outer", "recursive", "mode"].map((function (r) { return function (r) { if (!r) return ""; var t = r.type, e = r.symbol, n = r.value; return [Er(t), e, vt(n)].filter(yr).join(" ") }(t[r]) })).filter(yr).join(", "); return "".concat(Er(e), "(").concat(n, ")") }, fulltext_search: function (r) { var t = r.against, e = r.as, n = r.columns, s = r.match, u = r.mode; return [[Er(s), "(".concat(n.map((function (r) { return z(r) })).join(", "), ")")].join(" "), [Er(t), ["(", vt(r.expr), u && " ".concat(hr(u)), ")"].filter(yr).join("")].join(" "), er(e)].filter(yr).join(" ") }, function: w, lambda: function (r) { var t = r.args, e = r.expr, n = t.value, s = t.parentheses, u = n.map(vt).join(", "); return [s ? "(".concat(u, ")") : u, "->", vt(e)].join(" ") }, insert: Dr, interval: P, json: function (r) { var t = r.keyword, e = r.expr_list; return [Er(t), e.map((function (r) { return vt(r) })).join(", ")].join(" ") }, json_object_arg: function (r) { var t = r.expr, e = t.key, n = t.value, s = t.on, u = [vt(e), "VALUE", vt(n)]; return s && u.push("ON", "NULL", vt(s)), u.filter(yr).join(" ") }, json_visitor: function (r) { return [r.symbol, vt(r.expr)].join("") }, show: kr, struct: lt, tablefunc: function (r) { var t = r.as, e = r.name, n = r.args, s = [hr(e.schema), e.name.map(hr).join(".")].filter(yr).join("."); return ["".concat(s, "(").concat(vt(n).join(", "), ")"), "AS", w(t)].join(" ") }, tables: B, unnest: G, window: function (r) { return r.expr.map(L).join(", ") } }; function bt(r) { var t = r.prefix, e = void 0 === t ? "@" : t, n = r.name, s = r.members, u = r.keyword, o = r.quoted, a = r.suffix, i = []; u && i.push(u); var l = s && s.length > 0 ? "".concat(n, ".").concat(s.join(".")) : n, c = "".concat(e || "").concat(l); return a && (c += a), i.push(c), [o, i.join(" "), o].filter(yr).join("") } function vt(r) { if (r) { var t = r; if (r.ast) { var e = t.ast; Reflect.deleteProperty(t, e); for (var n = 0, s = Object.keys(e); n < s.length; n++){ var u = s[n]; t[u] = e[u] } } return ft[t.type] ? ft[t.type](t) : hr(t) } } function Lt(r) { return r ? r.map(vt) : [] } function Ct(r, t) { if (!Array.isArray(r)) return ""; var e = [], n = Er(t); switch (n) { case "ORDER BY": e = r.map((function (r) { return [vt(r.expr), r.type || "ASC", Er(r.nulls)].filter(yr).join(" ") })); break; case "PARTITION BY": default: e = r.map((function (r) { return vt(r.expr) })) }return lr(n, e.join(", ")) } ft.var = bt, ft.expr_list = function (r) { var t = Lt(r.value); return r.parentheses ? "(".concat(t.join(", "), ")") : t }, ft.select = function (r) { var t = "object" === ct(r._next) ? Dr(r) : _(r); return r.parentheses ? "(".concat(t, ")") : t }, ft.unary_expr = function (r) { var t = r.operator, e = r.parentheses, n = r.expr, s = "-" === t || "+" === t || "~" === t || "!" === t ? "" : " ", u = "".concat(t).concat(s).concat(vt(n)); return e ? "(".concat(u, ")") : u }, ft.map_object = function (r) { var t = r.keyword, e = r.expr.map((function (r) { return [hr(r.key), hr(r.value)].join(", ") })).join(", "); return [Er(t), "[".concat(e, "]")].join("") }; var pt = e(1), dt = e(2), wt = e(3), Et = e(4), yt = e(5), ht = e(6), At = e(7), mt = e(8), Tt = e(9), Rt = e(10), It = e(11), Nt = e(12), _t = e(13), St = e(14), gt = { athena: pt.parse, bigquery: dt.parse, db2: wt.parse, flinksql: Et.parse, hive: yt.parse, mysql: ht.parse, mariadb: At.parse, noql: mt.parse, postgresql: Tt.parse, redshift: Rt.parse, snowflake: _t.parse, sqlite: It.parse, transactsql: Nt.parse, trino: St.parse }; function Ot(r) { return (Ot = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (r) { return typeof r } : function (r) { return r && "function" == typeof Symbol && r.constructor === Symbol && r !== Symbol.prototype ? "symbol" : typeof r })(r) } function xt(r, t) { var e = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (!e) { if (Array.isArray(r) || (e = function (r, t) { if (!r) return; if ("string" == typeof r) return Ut(r, t); var e = Object.prototype.toString.call(r).slice(8, -1); "Object" === e && r.constructor && (e = r.constructor.name); if ("Map" === e || "Set" === e) return Array.from(r); if ("Arguments" === e || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e)) return Ut(r, t) }(r)) || t && r && "number" == typeof r.length) { e && (r = e); var n = 0, s = function () { }; return { s: s, n: function () { return n >= r.length ? { done: !0 } : { done: !1, value: r[n++] } }, e: function (r) { throw r }, f: s } } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.") } var u, o = !0, a = !1; return { s: function () { e = e.call(r) }, n: function () { var r = e.next(); return o = r.done, r }, e: function (r) { a = !0, u = r }, f: function () { try { o || null == e.return || e.return() } finally { if (a) throw u } } } } function Ut(r, t) { (null == t || t > r.length) && (t = r.length); for (var e = 0, n = new Array(t); e < t; e++)n[e] = r[e]; return n } function kt(r, t) { for (var e = 0; e < t.length; e++){ var n = t[e]; n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(r, Mt(n.key), n) } } function Mt(r) { var t = function (r, t) { if ("object" != Ot(r) || !r) return r; var e = r[Symbol.toPrimitive]; if (void 0 !== e) { var n = e.call(r, t || "default"); if ("object" != Ot(n)) return n; throw new TypeError("@@toPrimitive must return a primitive value.") } return ("string" === t ? String : Number)(r) }(r, "string"); return "symbol" == Ot(t) ? t : t + "" } var Dt = function () { return r = function r() { !function (r, t) { if (!(r instanceof t)) throw new TypeError("Cannot call a class as a function") }(this, r) }, (t = [{ key: "astify", value: function (r) { var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : or, e = this.parse(r, t); return e && e.ast } }, { key: "sqlify", value: function (r) { var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : or; return Lr(t), jr(r) } }, { key: "exprToSQL", value: function (r) { var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : or; return Lr(t), vt(r) } }, { key: "parse", value: function (r) { var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : or, e = t.database, n = void 0 === e ? "mysql" : e; Lr(t); var s = n.toLowerCase(); if (gt[s]) return gt[s](!1 === t.trimQuery ? r : r.trim(), t.parseOptions || or.parseOptions); throw new Error("".concat(n, " is not supported currently")) } }, { key: "whiteListCheck", value: function (r, t) { var e = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : or; if (t && 0 !== t.length) { var n = e.type, s = void 0 === n ? "table" : n; if (!this["".concat(s, "List")] || "function" != typeof this["".concat(s, "List")]) throw new Error("".concat(s, " is not valid check mode")); var u, o = this["".concat(s, "List")].bind(this), a = o(r, e), i = !0, l = "", c = xt(a); try { for (c.s(); !(u = c.n()).done;){ var f, b = u.value, v = !1, L = xt(t); try { for (L.s(); !(f = L.n()).done;){ var C = f.value, p = new RegExp(C, "i"); if (p.test(b)) { v = !0; break } } } catch (r) { L.e(r) } finally { L.f() } if (!v) { l = b, i = !1; break } } } catch (r) { c.e(r) } finally { c.f() } if (!i) throw new Error("authority = '".concat(l, "' is required in ").concat(s, " whiteList to execute SQL = '").concat(r, "'")) } } }, { key: "tableList", value: function (r, t) { var e = this.parse(r, t); return e && e.tableList } }, { key: "columnList", value: function (r, t) { var e = this.parse(r, t); return e && e.columnList } }]) && kt(r.prototype, t), e && kt(r, e), Object.defineProperty(r, "prototype", { writable: !1 }), r; var r, t, e }(); function $t(r) { return ($t = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (r) { return typeof r } : function (r) { return r && "function" == typeof Symbol && r.constructor === Symbol && r !== Symbol.prototype ? "symbol" : typeof r })(r) } "object" === ("undefined" == typeof self ? "undefined" : $t(self)) && self && (self.NodeSQLParser = { Parser: Dt, util: n }), "undefined" == typeof global && "object" === ("undefined" == typeof window ? "undefined" : $t(window)) && window && (window.global = window), "object" === ("undefined" == typeof global ? "undefined" : $t(global)) && global && global.window && (global.window.NodeSQLParser = { Parser: Dt, util: n }) }]));